{"version":3,"sources":["Startpage/Settings/settingsHandler.ts","Startpage/LinkContainer/Accordion/Accordion.tsx","data/data.ts","Startpage/LinkContainer/LinkContainer.tsx","Startpage/Searchbar/Searchbar.tsx","Startpage/Settings/SettingsWindow/IconButton.tsx","Startpage/Settings/SettingsWindow/LinkSettings/OptionTextArea.tsx","Startpage/Settings/SettingsWindow/LinkSettings/LinkSettings.tsx","Startpage/Settings/SettingsWindow/OptionSlider.tsx","Startpage/Settings/SettingsWindow/OptionTextInput.tsx","Startpage/Settings/SettingsWindow/SearchSettings/FastForwardSearch.tsx","Startpage/Settings/SettingsWindow/SearchSettings/SearchSettings.tsx","Startpage/Settings/SettingsWindow/Dropdown.tsx","Startpage/Settings/SettingsWindow/DesignSettings/ColorPicker.tsx","Startpage/Settings/SettingsWindow/DesignSettings/DesignSettings.tsx","data/changelog.ts","Startpage/Settings/SettingsWindow/Changelog/Changelog.tsx","Startpage/Settings/SettingsWindow/SettingsWindow.tsx","Startpage/Settings/Settings.tsx","Startpage/Startpage.tsx","App.tsx","serviceWorker.js","index.js","data/pictures/pic_1.jpg","data/pictures/pic_2.jpg","data/pictures/pic_3.jpg","data/pictures/pic_4.jpg","data/pictures/pic_5.jpg","data/pictures/pic_6.jpg","data/pictures/pic_7.jpg","data/pictures/pic_8.png","data/pictures/google.svg","data/pictures/duckduckgo.svg","data/pictures/qwant.svg","data/pictures/logo.png"],"names":["Search","get","lsSearch","localStorage","getItem","parse","set","searchSettings","setItem","JSON","stringify","Links","lsLinks","themes","linkGroups","Design","lsDesign","Themes","design","lsThemes","add","theme","remove","name","filter","StyledAccordionContainer","styled","div","AccordionContainer","props","children","StyledAccordionGroup","AccordionContent","width","AccordionTitleWrapper","button","active","AccordionTitle","h1","AccordionGroup","parent","title","onClick","useState","contentWidth","setContentWidth","useEffect","clientWidth","length","ref","elem","parentElement","tabIndex","undefined","className","aria-hidden","links","label","value","images","pic_1","pic_2","pic_3","pic_4","pic_5","pic_6","pic_7","pic_8","searchEngines","engine","fastForward","image","colors","LinkItem","a","LinkContainer","setActive","Settings","console","error","map","group","groupIndex","key","link","linkIndex","href","StyledSearchbarContainer","StyledSearchbar","input","SearchIcon","src","Searchbar","defaultSettings","searchSymbol","duckduckgo","startsWith","google","qwant","placeholder","type","onKeyUp","e","which","query","currentTarget","window","location","autoFocus","StyledIconButton","inverted","IconButton","icon","text","StyledOptionTextArea","StyledTextArea","textarea","OptionTextArea","initialValue","onChange","setError","setValue","tryOnChangeEvent","parsedData","GeneralSettingsContent","LinkSettings","setLinkGroups","SettingsLabel","SliderWrapper","OptionSlider","values","currentValue","index","setIndex","forEach","val","i","handleChange","newIndex","disabled","faAngleLeft","faAngleRight","StyledInput","OptionTextInput","FastForwardWrapper","FastForwardTable","table","StyledFastForwardItem","tr","AddItemButton","AddItemTextField","FastForwardItem","url","deleteThis","faTrash","FastForwardAddItem","setUrl","newValue","newUrl","faPlus","FastForwardSearch","Object","keys","sort","copy","deleteValue","tableLeft","splice","tableRight","SearchSettingsContent","SearchSettings","setSearchSettings","SettingElement","DropdownWrapper","DropdownButton","DropdownPopup","height","items","DropdownItem","Dropdown","popupHeight","setPopupHeight","hasBlur","setHasBlur","current","item","getCurrentLabel","faAngleDown","onBlur","clientHeight","ColorPickerContainer","ColorOption","StyledMaterialPicker","ColorPicker","setColors","defaultThemes","currentColor","setCurrentColor","color","result","tmp","hex","DesignPreview","toString","replaceAll","ImagePreview","img","StyledAccordionPreview","colorVar","SectionDivider","AccordionPreviewTitle","h2","AccordionPreviewContainer","SettingButtonRow","AccordionPreview","DesignSettings","setDesign","setThemes","isNewDesign","setIsNewDesign","setImage","themeEquals","themeChange","themeName","newTheme","themeExists","StyledSettingsContent","SettingsButton","faSave","faMinus","theme1","theme2","isEqual","changelog","version","changes","description","ChangelogWrapper","StyledVersion","Changelog","logo","alt","Version","change","StyledSettingsWindow","WindowContent","WindowHeader","WindowFooter","p","CloseButton","Tabbar","TabOption","TabOptions","SettingsWindow","hidePopup","currentTab","setCurrentTab","defaultLinks","defaultSearchSettings","lsSearchSettings","lsLinkGroups","option","faTimes","reload","faFire","clear","SettingsPopupToggle","PopupCover","SettingsWrapper","showSettings","setShowSettings","faSlidersH","StyledStartpage","Image","Startpage","setImg","onError","App","root","document","documentElement","style","setProperty","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.3d841ef5.chunk.js","sourcesContent":["import { linkGroup, Theme, Search as SearchType } from \"../../data/data\";\r\n\r\nexport const Search = {\r\n    get: () => {\r\n        const lsSearch = localStorage.getItem(\"search-settings\");\r\n        if (!!lsSearch)\r\n            return Search.parse(lsSearch);\r\n        return undefined;\r\n    },\r\n\r\n    set: (searchSettings: SearchType) =>\r\n        localStorage.setItem(\"search-settings\", JSON.stringify(searchSettings)),\r\n\r\n    parse: (searchSettings: string) =>\r\n        JSON.parse(searchSettings) as SearchType,\r\n};\r\n\r\nexport const Links = {\r\n    get: () => {\r\n        const lsLinks = localStorage.getItem(\"link-groups\");\r\n        if (!!lsLinks)\r\n            return Links.parse(lsLinks);\r\n        return undefined;\r\n    },\r\n\r\n    set: (themes: linkGroup[]) =>\r\n        localStorage.setItem(\"link-groups\", JSON.stringify(themes)),\r\n\r\n    parse: (linkGroups: string) =>\r\n        JSON.parse(linkGroups) as linkGroup[],\r\n};\r\n\r\nexport const Design = {\r\n    get: () => {\r\n        const lsDesign = localStorage.getItem(\"design\");\r\n        if (!!lsDesign)\r\n            return Themes.parse(lsDesign);\r\n        return undefined;\r\n    },\r\n\r\n    set: (design: Theme) =>\r\n        localStorage.setItem(\"design\", JSON.stringify(design)),\r\n};\r\n\r\n\r\nexport const Themes = {\r\n    get: () => {\r\n        const lsThemes = localStorage.getItem(\"themes\");\r\n        if (!!lsThemes)\r\n            return JSON.parse(lsThemes) as Theme[];\r\n        return undefined;\r\n    },\r\n\r\n    set: (themes: Theme[]) =>\r\n        localStorage.setItem(\"themes\", JSON.stringify(themes)),\r\n\r\n\r\n    add: (theme: Theme) => {\r\n        const lsThemes = Themes.get();\r\n        if (lsThemes)\r\n            Themes.set([...lsThemes, theme])\r\n        else\r\n            Themes.set([theme])\r\n    },\r\n\r\n    remove: (name: string) => {\r\n        const lsThemes = Themes.get();\r\n        if (lsThemes)\r\n            Themes.set(lsThemes.filter((theme) => theme.name !== name));\r\n    },\r\n\r\n    parse: (theme: string) =>\r\n        JSON.parse(theme) as Theme,\r\n};\r\n","import React, { PropsWithChildren, useEffect, useState } from 'react';\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst StyledAccordionContainer = styled.div`\r\n    margin-left: 100px;\r\n    display:flex;\r\n    width:calc(100% - 400px - 100px);\r\n`;\r\n\r\nexport const AccordionContainer = (props: PropsWithChildren<{}>) => {\r\n    return <StyledAccordionContainer>\r\n        {props.children}\r\n    </StyledAccordionContainer>\r\n}\r\n\r\nconst StyledAccordionGroup = styled.div`\r\n    height: 400px;\r\n    display: flex;\r\n    padding: 0 10px;\r\n    flex-direction: row;\r\n    border-right:3px solid var(--default-color);\r\n    :first-of-type{\r\n        border-left:3px solid var(--default-color);\r\n    }\r\n`;\r\n\r\nconst AccordionContent = styled.div< { width: number }>`\r\n    height: 100%;\r\n    width: ${({ width }) => width + \"px\"};\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    overflow: hidden;\r\n    transition:.3s;\r\n`;\r\n\r\nconst AccordionTitleWrapper = styled.button< { active: boolean }>`\r\n    padding: 0;\r\n    background-color: var(--bg-color);\r\n    border: 4px solid var(--accent-color);\r\n    height: 100%;\r\n    width: 90px;\r\n    cursor: ${({ active }) =>\r\n        active ? \"default\" : \"pointer\"\r\n    };\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    opacity: 0.8;\r\n    position: relative;\r\n    ::before {\r\n        content: \"\";\r\n        position: absolute;\r\n        bottom: 0px;\r\n        width: 100%;\r\n        height: ${({ active }) => active ? \"390px\" : \"0\"};\r\n        background-color: var(--accent-color);\r\n        transition:  ${({ active }) => active ? \"1s\" : \".5s\"};\r\n    }\r\n    :hover, :focus{\r\n        outline: none;\r\n        ${({ active }) => !active && `\r\n            ::before {\r\n                height: 50%;\r\n            }\r\n            > .wave {\r\n                top: 180px;\r\n                ::before{\r\n                    animation: wave 12s infinite cubic-bezier(0.71, 0.33, 0.33, 0.68);\r\n                    top: -25%;\r\n                    left: 50%;\r\n                }\r\n            }\r\n        `}\r\n    }\r\n\r\n    > .wave {\r\n        /* Waves Source: https://codepen.io/mburakerman/pen/eRZZEv */\r\n        width: 82px;\r\n        height: 50px;\r\n        position: absolute;\r\n        top: ${({ active }) => active ? \"0px\" : \"350px\"};\r\n        overflow: hidden;\r\n        transition:  ${({ active }) => active ? \"1s\" : \".5s\"};\r\n        ::before{\r\n            content:\"\";\r\n            width: 180px;\r\n            height: 185px;\r\n            position: absolute;\r\n            top: -25%;\r\n            left: 50%;\r\n            margin-left: -90px;\r\n            margin-top: -140px;\r\n            border-radius: 37%;\r\n            background-color: var(--bg-color);\r\n            animation: wave 12s infinite cubic-bezier(0.71, 0.33, 0.33, 0.68);\r\n        }\r\n        @keyframes wave {\r\n            from { transform: rotate(0deg);}\r\n            from { transform: rotate(360deg);}\r\n        }\r\n    }\r\n\r\n\r\n    ${({ active }) =>\r\n        !active && `\r\n        :hover{\r\n            > * {\r\n                color: var(--bg-color);\r\n                text-shadow:\r\n                    5px 0px 0 var(--accent-color),\r\n                    4px 0px 0 var(--accent-color),\r\n                    3px 0px 0 var(--accent-color),\r\n                    2px 0px 0 var(--accent-color),\r\n                    1px 0px 0 var(--accent-color),\r\n                    -1px 0px 0 var(--accent-color),\r\n                    0px 1px 0 var(--accent-color),\r\n                    0px -1px 0 var(--accent-color);\r\n            }\r\n        }\r\n    `\r\n    };\r\n`;\r\n\r\nconst AccordionTitle = styled.h1< { title: string, active: boolean }>`\r\n    transform: rotate(90deg);\r\n    min-width: max-content;\r\n    color: ${({ active }) => active ? \"var(--bg-color)\" : \"var(--default-color)\"};\r\n    transition: .5s;\r\n    letter-spacing: 5px;\r\n`;\r\n\r\ntype groupProps = PropsWithChildren<{\r\n    active: boolean,\r\n    title: string,\r\n    onClick: () => void,\r\n}>\r\n\r\nexport const AccordionGroup = ({ active, title, children, onClick }: groupProps) => {\r\n    const [contentWidth, setContentWidth] = useState(active ? 500 : 0);\r\n    let parent: HTMLElement;\r\n    useEffect(() => {\r\n        if (parent && active) {\r\n            setContentWidth(\r\n                parent.clientWidth - (parent.children.length * 113) - 3\r\n            );\r\n        } else {\r\n            setContentWidth(0);\r\n        }\r\n    }, [active])\r\n\r\n    return <StyledAccordionGroup ref={elem => parent = elem?.parentElement as HTMLElement}>\r\n        <AccordionTitleWrapper active={active} onClick={onClick} tabIndex={active ? -1 : undefined}>\r\n            <div className={\"wave\"} />\r\n            <AccordionTitle active={active} title={title}>\r\n                {title}\r\n            </AccordionTitle>\r\n        </AccordionTitleWrapper>\r\n        <AccordionContent width={contentWidth} aria-hidden={!active || undefined}>\r\n            {children}\r\n        </AccordionContent>\r\n    </StyledAccordionGroup>\r\n}\r\n","import pic_1 from \"./pictures/pic_1.jpg\";\r\nimport pic_2 from \"./pictures/pic_2.jpg\";\r\nimport pic_3 from \"./pictures/pic_3.jpg\";\r\nimport pic_4 from \"./pictures/pic_4.jpg\";\r\nimport pic_5 from \"./pictures/pic_5.jpg\";\r\nimport pic_6 from \"./pictures/pic_6.jpg\";\r\nimport pic_7 from \"./pictures/pic_7.jpg\";\r\nimport pic_8 from \"./pictures/pic_8.png\";\r\n\r\nexport type dataElem = {\r\n\tlabel: string,\r\n\tvalue: string,\r\n}\r\n\r\nexport type linkGroup = {\r\n\ttitle: string;\r\n\tlinks: dataElem[];\r\n}\r\n\r\n/*\r\n──────▄▌▐▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀​▀▀▀▀▀▀▌\r\n───▄▄██▌█ BEEP BEEP\r\n▄▄▄▌▐██▌█ GAY PORN DELIVERY\r\n███████▌█▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄​▄▄▄▄▄▄▌\r\n▀(@)▀▀▀▀▀▀▀(@)(@)▀▀▀▀▀▀▀▀▀▀▀▀▀​▀▀▀▀(@)▀\r\n*/\r\nexport const links: linkGroup[] = [\r\n\t{\r\n\t\ttitle: \"Reddit\",\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"r/startpages\",\r\n\t\t\t\tvalue: \"https://www.reddit.com/r/startpages/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"r/unixporn\",\r\n\t\t\t\tvalue: \"https://www.reddit.com/r/unixporn/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"r/rainmeter\",\r\n\t\t\t\tvalue: \"https://www.reddit.com/r/rainmeter/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"r/AnimalsBeingDerps\",\r\n\t\t\t\tvalue: \"https://www.reddit.com/r/AnimalsBeingDerps/\",\r\n\t\t\t},\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\ttitle: \"3D Modelling\",\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Blender\",\r\n\t\t\t\tvalue: \"https://www.blender.org/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"BlenderGuru\",\r\n\t\t\t\tvalue: \"https://www.blenderguru.com/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Poliigon\",\r\n\t\t\t\tvalue: \"https://www.poliigon.com/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Blender tutorial\",\r\n\t\t\t\tvalue: \"https://www.youtube.com/watch?v=NyJWoyVx_XI&list=PLjEaoINr3zgEq0u2MzVgAaHEBt--xLB6U\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"The other Blender tutorial\",\r\n\t\t\t\tvalue: \"https://www.youtube.com/watch?v=bpvh-9H8S1g&list=PL8eKBkZzqDiU-qcoaghCz04sMitC1yx6k&index=1\",\r\n\t\t\t},\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\ttitle: \"Design\",\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"PixlrX\",\r\n\t\t\t\tvalue: \"https://pixlr.com/x/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"AI Image Enlarger\",\r\n\t\t\t\tvalue: \"https://bigjpg.com/en\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Img to Svg Converter\",\r\n\t\t\t\tvalue: \"https://picsvg.com/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Affinity\",\r\n\t\t\t\tvalue: \"https://affinity.serif.com/en-us/tutorials/designer/desktop/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Affinity - YT\",\r\n\t\t\t\tvalue: \"https://www.youtube.com/c/AffinityRevolution/playlists\",\r\n\t\t\t},\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\ttitle: \"Music\",\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"i wanna be a cowboy\",\r\n\t\t\t\tvalue: \"https://www.youtube.com/watch?v=8zWz92f_HGs\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"let the bodies hit the floor\",\r\n\t\t\t\tvalue: \"https://www.youtube.com/watch?v=b--VKaCB9u0\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Nobody Kanna Cross It\",\r\n\t\t\t\tvalue: \"https://www.youtube.com/watch?v=2wqTnwJGvtc\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Smug Dancin\",\r\n\t\t\t\tvalue: \"https://www.youtube.com/watch?v=eNZ9Od1jQ4Q\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Utamaru - The Sanctified Mind Cover\",\r\n\t\t\t\tvalue: \"https://www.youtube.com/watch?v=MHlJKLlS07U\",\r\n\t\t\t},\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\ttitle: \"Sauce\",\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"JS Library - React\",\r\n\t\t\t\tvalue: \"https://reactjs.org/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"CSS Writing Library - EmotionJS\",\r\n\t\t\t\tvalue: \"https://emotion.sh/docs/introduction\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Pictures - DeathAndMilk\",\r\n\t\t\t\tvalue: \"https://www.instagram.com/deathandmilk_/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Icons - FontAwesome\",\r\n\t\t\t\tvalue: \"https://fontawesome.com/icons\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Text Flicker - CodeMyUI\",\r\n\t\t\t\tvalue: \"https://codemyui.com/crt-screen-text-flicker-animation-in-pure-css/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Wave Animation - mburakerman\",\r\n\t\t\t\tvalue: \"https://codepen.io/mburakerman/pen/eRZZEv\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"About me t(ಠ益ಠt)\",\r\n\t\t\t\tvalue: \"/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Da real sauce ԅ(♡﹃♡ԅ)\",\r\n\t\t\t\tvalue: \"https://www.youtube.com/watch?v=qr89xoZyE1g\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Even more real sauce ( ͡° ͜ʖ ͡°)\",\r\n\t\t\t\tvalue: \"https://www.youtube.com/watch?v=VLhJOd_TFiI\",\r\n\t\t\t},\r\n\t\t]\r\n\t},\r\n]\r\n\r\nexport const images: dataElem[] = [\r\n\t{ label: \"pic_1\", value: pic_1 },\r\n\t{ label: \"pic_2\", value: pic_2 },\r\n\t{ label: \"pic_3\", value: pic_3 },\r\n\t{ label: \"pic_4\", value: pic_4 },\r\n\t{ label: \"pic_5\", value: pic_5 },\r\n\t{ label: \"pic_6\", value: pic_6 },\r\n\t{ label: \"pic_7\", value: pic_7 },\r\n\t{ label: \"pic_8\", value: pic_8 },\r\n];\r\n\r\nexport const searchEngines: dataElem[] = [\r\n\t{\r\n\t\tlabel: \"DuckDuckGo\",\r\n\t\tvalue: \"duckduckgo.com/\",\r\n\t},\r\n\t{\r\n\t\tlabel: \"Google\",\r\n\t\tvalue: \"google.com/search\",\r\n\t},\r\n\t{\r\n\t\tlabel: \"Qwant\",\r\n\t\tvalue: \"qwant.com/\",\r\n\t},\r\n];\r\n\r\nexport type FastForwards = {\r\n\t[key: string]: string,\r\n}\r\n\r\nexport type Search = {\r\n\tengine: string,\r\n\tfastForward: FastForwards,\r\n}\r\n\r\nexport const searchSettings: Search = {\r\n\tengine: searchEngines[0].value,\r\n\tfastForward: {\r\n\t\t\"deepl\": \"https://deepl.com/\",\r\n\t\t\"maps\": \"https://google.de/maps/\",\r\n\t\t\"reddit\": \"https://reddit.com/\",\r\n\t\t\"github\": \"https://github.com/\",\r\n\t\t\"gitlab\": \"https://gitlab.com/\",\r\n\t\t\"youtube\": \"https://youtube.com/\",\r\n\t}\r\n}\r\n\r\nexport type colorsType = {\r\n\t[key: string]: string\r\n\t\"--bg-color\": string,\r\n\t\"--default-color\": string,\r\n\t\"--accent-color\": string,\r\n\t\"--accent-color2\": string,\r\n}\r\n\r\nexport type Theme = {\r\n\tname: string;\r\n\tcolors: colorsType;\r\n\timage: string;\r\n}\r\n\r\nexport const themes: Theme[] = [\r\n\t{\r\n\t\tname: \"DeathAndMilk\",\r\n\t\timage: pic_1,\r\n\t\tcolors: {\r\n\t\t\t\"--bg-color\": \"#2E2E2E\",\r\n\t\t\t\"--default-color\": \"#E6E6E6\",\r\n\t\t\t\"--accent-color\": \"#FFB4E6\",\r\n\t\t\t\"--accent-color2\": \"#B4FFE6\",\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tname: \"Pop!OS\",\r\n\t\timage: \"https://oswallpapers.com/wp-content/uploads/2019/04/kate-hazen-unleash-your-robot.jpg\",\r\n\t\tcolors: {\r\n\t\t\t\"--bg-color\": \"#333136\",\r\n\t\t\t\"--default-color\": \"#2BC5EB\",\r\n\t\t\t\"--accent-color\": \"#FCD307\",\r\n\t\t\t\"--accent-color2\": \"#2BC5EB\",\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tname: \"Dark Souls\",\r\n\t\timage: \"https://i.pinimg.com/originals/16/74/db/1674dbae45cd38f3d3b4c00dc8616bd7.gif\",\r\n\t\tcolors: {\r\n\t\t\t\"--bg-color\": \"#32323C\",\r\n\t\t\t\"--default-color\": \"#A0A08C\",\r\n\t\t\t\"--accent-color\": \"#9A6650\",\r\n\t\t\t\"--accent-color2\": \"#461E28\",\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tname: \"S.E.Lain\",\r\n\t\timage: \"https://64.media.tumblr.com/54a945edd2641e20859d6f6537cd7423/tumblr_pwa4bogz4N1qze3hdo2_r1_500.gifv\",\r\n\t\tcolors: {\r\n\t\t\t\"--bg-color\": \"#0a1a25\",\r\n\t\t\t\"--default-color\": \"#a6b7ab\",\r\n\t\t\t\"--accent-color\": \"#94656b\",\r\n\t\t\t\"--accent-color2\": \"#57182e\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tname: \"Kitties\",\r\n\t\timage: \"https://64.media.tumblr.com/5a232d5c0999d02388d78e5c1025f94f/0572516693bf4014-3d/s500x750/0306dc89b657093529aa3ce96e64b9c43572e901.gifv\",\r\n\t\tcolors: {\r\n\t\t\t\"--bg-color\": \"#495662\",\r\n\t\t\t\"--default-color\": \"#d1f1fa\",\r\n\t\t\t\"--accent-color\": \"#80aad4\",\r\n\t\t\t\"--accent-color2\": \"#e8a9b7\"\r\n\t\t}\r\n\t}\r\n]","import React, { useState } from 'react';\r\nimport styled from \"@emotion/styled\";\r\nimport { AccordionContainer, AccordionGroup } from './Accordion/Accordion';\r\nimport * as Settings from \"../Settings/settingsHandler\";\r\nimport { linkGroup, links } from \"../../data/data\";\r\n\r\nconst LinkItem = styled.a`\r\n    width: fit-content;\r\n    white-space: nowrap;\r\n    position:relative;\r\n    padding: 10px 0 10px 30px;\r\n    font-size:1rem;\r\n\r\n    ::before{\r\n        position:absolute;\r\n        left:0px;\r\n        bottom:5px;\r\n        z-index:0;\r\n        content: \"\";\r\n        height:5px;\r\n        width:100%;\r\n        background-color: var(--accent-color);\r\n        transition:.5s;\r\n        opacity:.7;\r\n    }\r\n\r\n    :hover, :focus {\r\n        color: var(--accent-color2);\r\n        animation:text-flicker 0.01s ease 0s infinite alternate;\r\n        outline: none;\r\n    }\r\n\r\n`;\r\n\r\nexport const LinkContainer = () => {\r\n    const [active, setActive] = useState(0);\r\n    let linkGroups: linkGroup[] = links;\r\n    try {\r\n        const lsLinks = Settings.Links.get();\r\n        if (lsLinks)\r\n            linkGroups = lsLinks;\r\n    }\r\n    catch { console.error(\"Links could not be loaded.\"); }\r\n\r\n    return <AccordionContainer>\r\n        {linkGroups.map((group, groupIndex) =>\r\n            <AccordionGroup\r\n                key={\"AccordionGroup\" + groupIndex}\r\n                active={active === groupIndex}\r\n                title={group.title} onClick={() => setActive(groupIndex)}\r\n            >\r\n                {group.links.map((link, linkIndex) =>\r\n                    <LinkItem\r\n                        tabIndex={active !== groupIndex ? -1 : undefined}\r\n                        key={\"LinkItem\" + linkIndex}\r\n                        href={link.value}\r\n                    >\r\n                        {link.label}\r\n                    </LinkItem>\r\n                )}\r\n            </AccordionGroup>\r\n        )}\r\n    </AccordionContainer>\r\n}","import React from 'react';\r\nimport styled from \"@emotion/styled\";\r\nimport * as Settings from \"../Settings/settingsHandler\";\r\n\r\nimport { searchSettings as defaultSettings } from \"../../data/data\";\r\nimport google from \"../../data/pictures/google.svg\";\r\nimport duckduckgo from \"../../data/pictures/duckduckgo.svg\";\r\nimport qwant from \"../../data/pictures/qwant.svg\";\r\n\r\nconst StyledSearchbarContainer = styled.div`\r\n    position: fixed;\r\n    left: 100px;\r\n    right: 50px;\r\n    bottom: 40px;\r\n    height:min-content;\r\n    `;\r\nconst StyledSearchbar = styled.input`\r\n    width: 100%;\r\n    font-size: 30pt;\r\n    \r\n    background-color: rgba(0,0,0,0);\r\n    color: var(--default-color);\r\n    transition: .3s;\r\n    border: none;\r\n    border-bottom: 2px solid var(--default-color);\r\n    opacity: 0.3;\r\n    \r\n    ::placeholder {\r\n        color: var(--default-color);\r\n    }\r\n    \r\n    :hover, :focus {\r\n        opacity: 1;\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst SearchIcon = styled.div<{ src: string }>`\r\n    position: fixed;\r\n    left: 35px;\r\n    bottom: 40px;\r\n    height: 2.9rem;\r\n    width: 2.9rem;\r\n\r\n    background: var(--default-color);\r\n    \r\n    -webkit-mask-size: cover;\r\n    mask-size: cover;\r\n    -webkit-mask-image: url(${({ src }) => src});\r\n    mask-image: url(${({ src }) => src});\r\n`;\r\n\r\nexport const Searchbar = () => {\r\n    const searchSettings = Settings.Search.get() || defaultSettings;\r\n    const engine: string = searchSettings?.engine || \"duckduckgo.com/\";\r\n\r\n    let searchSymbol = duckduckgo\r\n    if (engine.startsWith(\"google\"))\r\n        searchSymbol = google;\r\n    else if (engine.startsWith(\"qwant\"))\r\n        searchSymbol = qwant;\r\n\r\n    const redirectToSearch = (query: string) => {\r\n        if (searchSettings.fastForward[query])\r\n            window.location.href = searchSettings.fastForward[query];\r\n        else\r\n            window.location.href = \"https://\" + engine + \"?q=\" + query;\r\n    }\r\n\r\n    return (\r\n        <StyledSearchbarContainer>\r\n            <StyledSearchbar\r\n                placeholder=\"Always stay clean!\"\r\n                type=\"input\"\r\n                onKeyUp={e => e.which === 13 && redirectToSearch(e.currentTarget.value)}\r\n                autoFocus={true}\r\n            />\r\n            <SearchIcon src={searchSymbol} />\r\n        </StyledSearchbarContainer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { FontAwesomeIcon, FontAwesomeIconProps } from '@fortawesome/react-fontawesome'\r\nimport styled from '@emotion/styled';\r\n\r\nconst StyledIconButton = styled.button<{ inverted?: boolean }>`\r\n    color: ${({ inverted }) => (inverted ? \"var(--bg-color)\" : \"var(--default-color)\")};\r\n    background-color: transparent;\r\n    min-width:50px;\r\n\tfont-size: 20px;\r\n    border: none;\r\n\topacity: 0.7;\r\n\tcursor: pointer;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    :enabled:hover{\r\n        ${({ inverted }) => inverted ?\r\n        `filter: \r\n            drop-shadow(2px 2px 0 var(--accent-color))\r\n            drop-shadow(-2px -2px 0 var(--accent-color))\r\n            drop-shadow(-2px 2px 0 var(--accent-color))\r\n            drop-shadow(2px -2px 0 var(--accent-color))`\r\n        : \"animation: box-flicker 0.01s ease 0s infinite alternate\"};\r\n    }\r\n    :focus{\r\n        outline: none;\r\n    }\r\n    :disabled{\r\n        opacity: 0.2;\r\n        cursor: default;\r\n    }\r\n\r\n    > span{\r\n        padding-right:10px;\r\n    }\r\n`;\r\ntype props =\r\n    Partial<Pick<FontAwesomeIconProps, \"icon\">>\r\n    & React.ButtonHTMLAttributes<HTMLButtonElement>\r\n    & {\r\n        text?: string;\r\n        inverted?: boolean;\r\n    };\r\n\r\n\r\nexport const IconButton = ({\r\n    icon,\r\n    text,\r\n    children,\r\n    ...props\r\n}: props) => {\r\n    return <StyledIconButton {...props}>\r\n        {children && children}\r\n        {text && <span>{text}</span>}\r\n        {icon && <FontAwesomeIcon icon={icon}></FontAwesomeIcon>}\r\n    </StyledIconButton>\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nimport * as Settings from \"../../settingsHandler\";\r\n\r\nimport { linkGroup } from \"../../../../data/data\";\r\n\r\nconst StyledOptionTextArea = styled.div<{ error?: string }>`\r\n    position: relative;\r\n    border: 2px solid var(--default-color);\r\n    display:flex;\r\n    padding: 10px 0 10px 20px;\r\n    height: calc(100% - 40px);\r\n    ${({ error }) => error && `\r\n        ::after{\r\n            content: \"${error}\";\r\n            color: var(--accent-color);\r\n            position: absolute;\r\n            top: 10px;\r\n            right: 15px;\r\n            font-size: 0.8rem;\r\n        }\r\n    `}\r\n`;\r\n\r\nconst StyledTextArea = styled.textarea`\r\n    background-color: var(--bg-color);\r\n    color: var(--default-color);\r\n    border: none;\r\n    height: 100%;\r\n    width: 100%;\r\n    outline: none;\r\n    resize: none;\r\n`;\r\n\r\nconst placeholder = JSON.stringify(\r\n    [\r\n        {\r\n            title: \"Title\",\r\n            links: [\r\n                {\r\n                    label: \"label\",\r\n                    value: \"url\",\r\n                },\r\n                {\r\n                    label: \"label\",\r\n                    value: \"url\",\r\n                },\r\n                {\r\n                    label: \"label\",\r\n                    value: \"url\",\r\n                },\r\n            ]\r\n        },\r\n    ], null, 4);\r\n\r\ntype props = {\r\n    initialValue: linkGroup[],\r\n    onChange: (value: linkGroup[]) => void,\r\n}\r\n\r\nexport const OptionTextArea = ({ initialValue, onChange }: props) => {\r\n    const [error, setError] = useState<string | undefined>(undefined);\r\n    const [value, setValue] = useState(JSON.stringify(initialValue, null, 4));\r\n\r\n    useEffect(() => {\r\n        setValue(JSON.stringify(initialValue, null, 4));\r\n    }, [initialValue])\r\n\r\n    const tryOnChangeEvent = (linkGroups: string) => {\r\n        setValue(linkGroups);\r\n        try {\r\n            const parsedData = Settings.Links.parse(linkGroups);\r\n            setError(undefined);\r\n            onChange(parsedData);\r\n        } catch { setError(\"Your links are not parseable. Probably you have a Syntax Error?\") }\r\n    }\r\n\r\n    return <StyledOptionTextArea error={error}>\r\n        <StyledTextArea\r\n            onChange={e => tryOnChangeEvent(e.currentTarget.value)}\r\n            placeholder={placeholder}\r\n            value={value}\r\n        />\r\n    </StyledOptionTextArea>\r\n}","import React from 'react';\r\nimport styled from \"@emotion/styled\";\r\n\r\nimport { SettingsLabel } from \"../SettingsWindow\"\r\nimport { linkGroup } from \"../../../../data/data\";\r\nimport { OptionTextArea } from \"./OptionTextArea\";\r\n\r\ntype props = {\r\n    linkGroups: linkGroup[];\r\n    setLinkGroups: (value: linkGroup[]) => void;\r\n}\r\nexport const GeneralSettingsContent = styled.div`\r\n    width: 100%;\r\n`;\r\n\r\nexport const LinkSettings = ({ linkGroups, setLinkGroups }: props) => {\r\n\r\n    return (\r\n        <GeneralSettingsContent>\r\n            <SettingsLabel>Links</SettingsLabel>\r\n            <OptionTextArea onChange={setLinkGroups} initialValue={linkGroups} />\r\n        </GeneralSettingsContent>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { IconButton } from \"./IconButton\";\r\n\r\nconst SliderWrapper = styled.div`\r\n    height: 20px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    padding:5px 0;\r\n    > span {\r\n        min-width: 100px;\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n`;\r\n\r\ntype props = {\r\n    values: { label: string, value: string }[],\r\n    onChange: (value: string) => void,\r\n    currentValue: string,\r\n}\r\n\r\nexport const OptionSlider = ({ values, onChange, currentValue }: props) => {\r\n    const [index, setIndex] = useState(0);\r\n    useEffect(() => {\r\n        values.forEach((val, i) => {\r\n            currentValue === val.value && i !== index && setIndex(i)\r\n        })\r\n    }, [currentValue, values, index]);\r\n\r\n    const handleChange = (newIndex: number) => {\r\n        setIndex(newIndex);\r\n        onChange(values[newIndex]?.value);\r\n    }\r\n\r\n    return (\r\n        <SliderWrapper>\r\n            <IconButton\r\n                disabled={index <= 0}\r\n                onClick={() => { handleChange(index - 1) }}\r\n                icon={faAngleLeft}\r\n            />\r\n            <span>\r\n                {values[index]?.label}\r\n            </span>\r\n\r\n            <IconButton\r\n                disabled={index >= values.length - 1}\r\n                onClick={() => handleChange(index + 1)}\r\n                icon={faAngleRight}\r\n            />\r\n        </SliderWrapper>\r\n    )\r\n}","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst StyledInput = styled.input`\r\n    border: 2px solid var(--default-color);\r\n    width: calc(100% - 40px);\r\n    height: 100%;\r\n    padding: 10px 20px;\r\n    background-color: var(--bg-color);\r\n    color: var(--default-color);\r\n    outline:none;\r\n    opacity:0.5;\r\n    :enabled:hover, :focus{\r\n        opacity:1;\r\n    }\r\n    \r\n`;\r\n\r\ntype props = Omit<React.InputHTMLAttributes<HTMLInputElement>, \"onChange\"> & {\r\n    value: string,\r\n    onChange: (value: string) => void,\r\n}\r\n\r\nexport const OptionTextInput = ({ onChange, ...props }: props) => {\r\n\r\n    return (\r\n        <StyledInput\r\n            type={\"text\"}\r\n            onChange={(e) => onChange(e.currentTarget.value)}\r\n            {...props}\r\n        />\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport styled from \"@emotion/styled\";\r\nimport { faTrash, faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { FastForwards } from \"../../../../data/data\";\r\nimport { IconButton } from \"../IconButton\";\r\nimport { OptionTextInput } from \"../OptionTextInput\";\r\n\r\nconst FastForwardWrapper = styled.div`\r\n    margin-bottom: 20px;\r\n    display: flex;\r\n    @media screen and (max-width: 1300px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\nconst FastForwardTable = styled.table`\r\n    width: 50%;\r\n    padding: 0 20px;\r\n    @media screen and (max-width: 1300px) {\r\n        width: 100%;\r\n    }\r\n`;\r\nconst StyledFastForwardItem = styled.tr`\r\n    > td {\r\n        padding: 10px 0;\r\n        overflow: hidden;\r\n        white-space: nowrap;\r\n    }\r\n    > :first-of-type { max-width: 100px; }\r\n    > :nth-of-type(3) {max-width: 300px; }\r\n    > :last-of-type { width: 50px; }\r\n`;\r\nconst AddItemButton = styled(IconButton)`\r\n    font-size: 1rem;\r\n    display: inline;\r\n`;\r\nconst AddItemTextField = styled(OptionTextInput)`\r\n    width: calc(100% - 50px)\r\n`;\r\n\r\ntype FastForwardItemProps = {\r\n    value: string;\r\n    url: string;\r\n    deleteThis: () => void;\r\n}\r\n\r\nexport const FastForwardItem = ({ value, url, deleteThis }: FastForwardItemProps) => {\r\n    return (\r\n        <StyledFastForwardItem>\r\n            <td title={value}>{`\"${value}\"`}</td>\r\n            <td>&nbsp;:&nbsp;</td>\r\n            <td title={url}>{`\"${url}\"`}</td>\r\n            <td> <IconButton icon={faTrash} onClick={() => deleteThis()} /></td>\r\n        </StyledFastForwardItem>\r\n    )\r\n}\r\n\r\ntype FastForwardAddItemProps = {\r\n    add: (value: string, url: string) => void;\r\n}\r\n\r\nexport const FastForwardAddItem = ({ add }: FastForwardAddItemProps) => {\r\n    const [value, setValue] = useState<string>(\"\");\r\n    const [url, setUrl] = useState<string>(\"\");\r\n\r\n    return (\r\n        <StyledFastForwardItem>\r\n            <td>\r\n                <AddItemTextField\r\n                    value={value}\r\n                    onChange={(newValue) => setValue(newValue)}\r\n                    placeholder={\"search string\"}\r\n                />\r\n            </td>\r\n            <td>&nbsp;:&nbsp;</td>\r\n            <td>\r\n\r\n                <AddItemTextField\r\n                    value={url}\r\n                    onChange={(newUrl) => setUrl(newUrl)}\r\n                    placeholder={\"destination\"}\r\n                />\r\n            </td>\r\n            <td>\r\n                <AddItemButton\r\n                    disabled={!value || !url}\r\n                    onClick={() => value && url && add(value, url)}\r\n                    icon={faPlus}\r\n                />\r\n            </td>\r\n        </StyledFastForwardItem>\r\n    )\r\n}\r\n\r\ntype FastForwardSearchProps = {\r\n    links: FastForwards;\r\n    onChange: (links: FastForwards) => void;\r\n}\r\n\r\nexport const FastForwardSearch = ({ links, onChange }: FastForwardSearchProps) => {\r\n\r\n    const deleteValue = (value: string) => {\r\n        const copy = { ...links };\r\n        delete copy[value];\r\n        onChange({ ...copy, })\r\n    }\r\n    const addValue = (value: string, url: string) => {\r\n        const copy = { ...links };\r\n        copy[value] = url;\r\n        onChange({ ...copy, });\r\n    }\r\n\r\n    const table = Object.keys(links).sort().map((value) =>\r\n        <FastForwardItem\r\n            key={value}\r\n            value={value}\r\n            url={links[value]}\r\n            deleteThis={() => deleteValue(value)}\r\n        />\r\n    );\r\n    const tableLeft = [...table].splice(0, table.length / 2 + table.length % 2);\r\n    const tableRight = [...table].splice(table.length / 2 - table.length % 2);\r\n\r\n    return (\r\n        <div>\r\n            <FastForwardWrapper>\r\n                <FastForwardTable>\r\n                    <tbody>\r\n                        {tableLeft}\r\n                    </tbody>\r\n                </FastForwardTable>\r\n                <FastForwardTable>\r\n                    <tbody>\r\n                        {tableRight}\r\n                    </tbody>\r\n                </FastForwardTable>\r\n            </FastForwardWrapper>\r\n            <FastForwardTable>\r\n                <tbody>\r\n                    {<FastForwardAddItem add={addValue} />}\r\n                </tbody>\r\n            </FastForwardTable>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport styled from \"@emotion/styled\";\r\n\r\nimport { SettingElement, SettingsLabel } from \"../SettingsWindow\"\r\nimport { OptionSlider } from \"../OptionSlider\"\r\nimport { searchEngines, Search } from \"../../../../data/data\";\r\nimport { FastForwardSearch } from \"./FastForwardSearch\"\r\n\r\ntype props = {\r\n    searchSettings: Search;\r\n    setSearchSettings: (value: Search) => void;\r\n}\r\nexport const SearchSettingsContent = styled.div`\r\n    width: 100%;\r\n    overflow-y: auto;\r\n`;\r\n\r\nexport const SearchSettings = ({ searchSettings, setSearchSettings }: props) => {\r\n    return (\r\n        <SearchSettingsContent>\r\n            <SettingsLabel>Searchbar</SettingsLabel>\r\n            <SettingElement>\r\n                <OptionSlider\r\n                    currentValue={searchSettings.engine}\r\n                    values={searchEngines}\r\n                    onChange={(engine) => setSearchSettings({ ...searchSettings, engine: engine })}\r\n                />\r\n            </SettingElement>\r\n            <br />\r\n            <SettingsLabel>Fast Forward Search</SettingsLabel>\r\n            <FastForwardSearch\r\n                links={searchSettings.fastForward}\r\n                onChange={(fastForward) => setSearchSettings({ ...searchSettings, fastForward: fastForward })}\r\n            />\r\n        </SearchSettingsContent>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { IconButton } from \"./IconButton\";\r\n\r\nconst DropdownWrapper = styled.div`\r\n    position: relative;\r\n    height: 40px;\r\n`;\r\n\r\nconst DropdownButton = styled(IconButton)`\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    height: 40px;\r\n    width: calc(100% + 4px);\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: space-between;\r\n    justify-content: space-between;\r\n    padding:10px 20px;\r\n    border: 2px solid var(--default-color);\r\n    background-color: var(--bg-color);\r\n\r\n    :enabled:hover, :focus, :hover {\r\n        animation:none;\r\n        opacity: 1;\r\n    }\r\n\tfont-size: initial;\r\n    z-index: 10;\r\n`;\r\n\r\nconst DropdownPopup = styled.div<{ height: number, items: number }>`\r\n    height: ${({ height }) => height + \"px\"};\r\n    position: absolute;\r\n    left: 4px;\r\n    top: 40px;\r\n    width: calc(100% - 3px);\r\n    background-color: var(--bg-color);\r\n    overflow: hidden;\r\n    z-index: 9;\r\n    animation: box-flicker 0.01s ease 0s infinite alternate;\r\n    transition: ${({ items }) => items * 0.1 + \"s\"};\r\n    > div {\r\n        padding-top: 5px;\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nconst DropdownItem = styled(IconButton)`\r\n    margin: 0;\r\n    padding: 10px 20px;\r\n    justify-content: flex-start;\r\n    font-size: initial;\r\n    :enabled:hover {\r\n        animation:none;\r\n        opacity: 1;\r\n        background-color: var(--default-color);\r\n        color: var(--bg-color);\r\n    }\r\n`;\r\n\r\ntype props = {\r\n    items: { label: string, value: string }[],\r\n    onChange: (value: string) => void,\r\n    value: string,\r\n}\r\n\r\nexport const Dropdown = ({ items, onChange, value }: props) => {\r\n    const [popupHeight, setPopupHeight] = useState(0);\r\n    const [hasBlur, setHasBlur] = useState(false);\r\n    const getCurrentLabel = () => {\r\n        const current = items.filter((item) => item.value === value);\r\n        if (current.length > 0) return current[0].label;\r\n        else return value;\r\n    }\r\n\r\n    const handleChange = (value: string) => {\r\n        onChange(value);\r\n        setHasBlur(false);\r\n    }\r\n\r\n    return (\r\n        <DropdownWrapper\r\n        >\r\n            <DropdownButton\r\n                text={getCurrentLabel()}\r\n                icon={faAngleDown}\r\n                onClick={() => setHasBlur(!hasBlur)}\r\n            >\r\n            </DropdownButton>\r\n            <DropdownPopup height={hasBlur ? popupHeight : 0} items={items.length}>\r\n                <div\r\n                    onBlur={() => setHasBlur(false)}\r\n                    ref={(elem) => setPopupHeight(elem?.clientHeight || 0)}\r\n                >\r\n                    {items.map((item) =>\r\n                        <DropdownItem\r\n                            onClick={() => handleChange(item.value)}\r\n                            key={item.value}\r\n                            text={item.label}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </DropdownPopup>\r\n        </DropdownWrapper>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { MaterialPicker, ColorResult } from \"react-color\";\r\n\r\nimport { themes as defaultThemes, colorsType } from \"../../../../data/data\";\r\n\r\n\r\nconst ColorPickerContainer = styled.div`\r\n    display: flex;\r\n    > div {\r\n        padding: 0 10px;\r\n        width: 180px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\nconst ColorOption = styled.div<{ active: boolean }>`\r\n    width: 100%;\r\n    padding: 5px 0;\r\n    cursor: pointer;\r\n    opacity: ${({ active }) => !active && \"0.7\"};\r\n    color: ${({ active }) => active && \"var(--accent-color)\"};\r\n    :hover {\r\n        color: var(--accent-color2);\r\n        animation:text-flicker 0.01s ease 0s infinite alternate;\r\n    }\r\n`;\r\n\r\nconst StyledMaterialPicker = styled.div`\r\n    > div * {\r\n        background-color: var(--bg-color)!important;\r\n        color: var(--default-color)!important;\r\n        box-shadow: none;\r\n    }\r\n    > div{\r\n        border: 2px solid var(--default-color);\r\n    }\r\n`;\r\ntype props = {\r\n    colors: colorsType,\r\n    setColors: (value: colorsType) => void\r\n}\r\n\r\nexport const ColorPicker = ({ colors, setColors }: props) => {\r\n    const [currentColor, setCurrentColor] = useState(Object.keys(defaultThemes[0].colors)[0]);\r\n\r\n    const handleChange = (result: ColorResult) => {\r\n        let tmp = { ...colors };\r\n        tmp[currentColor] = result.hex;\r\n        setColors(tmp);\r\n    }\r\n\r\n    return (\r\n        <ColorPickerContainer>\r\n            <div>\r\n                {Object.keys(colors).map((key) =>\r\n                    <ColorOption\r\n                        key={key}\r\n                        active={key === currentColor}\r\n                        onClick={() => setCurrentColor(key)}\r\n                    >\r\n                        {key}\r\n                    </ColorOption>\r\n                )}\r\n            </div>\r\n            <StyledMaterialPicker>\r\n                <MaterialPicker\r\n                    color={colors[currentColor]}\r\n                    onChange={(color) => color && handleChange(color)}\r\n                />\r\n            </StyledMaterialPicker>\r\n        </ColorPickerContainer>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { faPlus, faMinus, faSave } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { StyledSettingsContent, SettingElement, SettingsButton, SettingsLabel } from \"../SettingsWindow\"\r\nimport { OptionSlider } from \"../OptionSlider\"\r\nimport { Dropdown } from \"../Dropdown\"\r\nimport { OptionTextInput } from \"../OptionTextInput\";\r\nimport { ColorPicker } from \"./ColorPicker\"\r\nimport { Theme, colorsType } from '../../../../data/data';\r\n\r\nimport { images } from \"../../../../data/data\";\r\n\r\nconst DesignPreview = styled.div<{ name: string, colors: colorsType }>`\r\n    ${({ colors }) => {\r\n        return Object.keys(colors)\r\n            .map((key: string) => key + `:` + colors[key])\r\n            .toString()\r\n            .replaceAll(\",\", \";\") + \";\";\r\n    }}\r\n\r\n    background-color: var(--bg-color);\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    align-items:center;\r\n    border: 2px solid var(--accent-color);\r\n    width: calc(100% - 400px);\r\n    height: 100%;\r\n    position: relative;\r\n    ::before{\r\n        content: \"${({ name }) => name}\";\r\n        color: var(--accent-color);\r\n        position: absolute;\r\n        top: 10px;\r\n        left: 15px;\r\n        font-size: 0.8rem;\r\n    }\r\n    ::after{\r\n        content: \"Design Preview\";\r\n        color: var(--accent-color);\r\n        position: absolute;\r\n        top: 10px;\r\n        right: 15px;\r\n        font-size: 0.8rem;\r\n    }\r\n    @media screen and (max-width: 1400px) {\r\n        > img {width: 200px; height: 200px;}\r\n        > div > div {\r\n            width: 50px;\r\n            height: 200px;\r\n            > h2 {font-size: 1rem;}\r\n            > .wave {\r\n                width: 50px;\r\n            }\r\n        }\r\n    }\r\n    @media screen and (max-width: 1200px) {\r\n        > img {width: 150px; height: 150px;}\r\n        > div > div {\r\n            width: 1rem;\r\n            margin-left: 0.5rem;\r\n            height: 150px;\r\n            > h2 {font-size: 0.8rem;}\r\n            > .wave {\r\n                display: none;\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst ImagePreview = styled.img`\r\n    margin: 10px; \r\n    height: 300px;\r\n    width: 300px;\r\n    border: 1px solid var(--default-color);\r\n    padding: 5px;\r\n    object-fit:cover;\r\n\r\n    animation:circling-shadow-small 4s ease 0s infinite normal;\r\n`;\r\nconst StyledAccordionPreview = styled.div< { colorVar: string }>`\r\n    border: 4px solid ${({ colorVar }) => `var(${colorVar})`};\r\n    height: 300px;\r\n    width: 80px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: relative;\r\n    ::before {\r\n        content: \"\";\r\n        position: absolute;\r\n        bottom: 0px;\r\n        width: 100%;\r\n        height: 100%;\r\n        background-color: ${({ colorVar }) => `var(${colorVar})`};\r\n    }\r\n\r\n   > .wave {\r\n        width: 80px;\r\n        height: 50px;\r\n        position: absolute;\r\n        top: 0px;\r\n        overflow: hidden;\r\n        ::before{\r\n            content:\"\";\r\n            width: 180px;\r\n            height: 185px;\r\n            position: absolute;\r\n            top: -25%;\r\n            left: 50%;\r\n            margin-left: -90px;\r\n            margin-top: -140px;\r\n            border-radius: 37%;\r\n            background: var(--bg-color);\r\n            animation: wave 12s infinite cubic-bezier(0.71, 0.33, 0.33, 0.68);\r\n        }\r\n        @keyframes wave {\r\n            from { transform: rotate(0deg);}\r\n            from { transform: rotate(360deg);}\r\n        }\r\n    }\r\n`;\r\nconst SectionDivider = styled.div`\r\n    width:calc(100% - 80px);\r\n    padding: 20px 40px;\r\n     position: relative;\r\n    :before{\r\n        content:\"\";\r\n        width:calc(100% - 80px);\r\n        position: absolute;\r\n    }\r\n`;\r\nconst AccordionPreviewTitle = styled.h2`\r\n    transform: rotate(90deg);\r\n    min-width: max-content;\r\n    color: var(--bg-color);\r\n    transition: .5s;\r\n    letter-spacing: 5px;\r\n`;\r\nconst AccordionPreviewContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items:center;\r\n    margin: 10px;\r\n    > * {\r\n        margin-left: 30px;\r\n    }\r\n`;\r\n\r\nexport const SettingButtonRow = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst AccordionPreview = ({ title, colorVar }: { title: string, colorVar: string }) => {\r\n    return <StyledAccordionPreview colorVar={colorVar} >\r\n        <div className={\"wave\"} />\r\n        <AccordionPreviewTitle>\r\n            {title}\r\n        </AccordionPreviewTitle>\r\n    </StyledAccordionPreview>\r\n}\r\n\r\ntype props = {\r\n    design: Theme;\r\n    setDesign: (design: Theme) => void;\r\n    themes: Theme[];\r\n    setThemes: (Themes: Theme[]) => void;\r\n}\r\n\r\nexport const DesignSettings = ({ design, setDesign, themes, setThemes }: props) => {\r\n    const [isNewDesign, setIsNewDesign] = useState(false);\r\n\r\n    const setName = (name: string) => setDesign({ ...design, name: name });\r\n    const setColors = (colors: colorsType) => setDesign({ ...design, colors: colors });\r\n    const setImage = (image: string) => setDesign({ ...design, image: image });\r\n\r\n    // check if design does exist already\r\n    useEffect(() => {\r\n        let currTheme = themes.filter((theme) => themeEquals(theme, design));\r\n        if (currTheme.length > 0) {\r\n            setIsNewDesign(false);\r\n        } else if (!isNewDesign) {\r\n            setIsNewDesign(true);\r\n        }\r\n    }, [design, themes])\r\n\r\n    const themeChange = (themeName: string) => {\r\n        const newTheme = themes.filter((theme) => theme.name === themeName);\r\n        if (newTheme.length > 0) {\r\n            setDesign(newTheme[0]);\r\n        }\r\n    }\r\n\r\n    const addTheme = (newTheme: Theme) => {\r\n        setThemes([...themes.filter((theme) => theme.name !== newTheme.name), newTheme]);\r\n    }\r\n\r\n    const removeTheme = (themeName: string) => {\r\n        setThemes(themes.filter((theme) => theme.name !== themeName));\r\n        if (themes.length > 0)\r\n            themeChange(themes[0].name);\r\n    }\r\n\r\n    const themeExists = (themeName: string) => {\r\n        return themes.filter((theme) => theme.name === design.name).length > 0\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <StyledSettingsContent>\r\n                    <SettingsLabel>Theme</SettingsLabel>\r\n\r\n                    <SettingElement>\r\n                        {themes && <Dropdown\r\n                            value={design.name}\r\n                            items={themes.map((theme) => ({ label: theme.name, value: theme.name }))}\r\n                            onChange={themeChange}\r\n                        />}\r\n                    </SettingElement>\r\n                    <SettingElement>\r\n                        <OptionTextInput\r\n                            value={design.name}\r\n                            onChange={setName}\r\n                            placeholder={\"Theme name\"}\r\n                        />\r\n                    </SettingElement>\r\n\r\n                    <SectionDivider />\r\n\r\n                    <SettingElement>\r\n                        <OptionTextInput\r\n                            value={design.image}\r\n                            onChange={setImage}\r\n                            placeholder={\"Image URL\"}\r\n                        />\r\n                        <OptionSlider\r\n                            currentValue={design.image}\r\n                            values={images}\r\n                            onChange={setImage}\r\n                        />\r\n                    </SettingElement>\r\n\r\n                    <SectionDivider />\r\n\r\n                    <SettingElement>\r\n                        <ColorPicker\r\n                            colors={design.colors}\r\n                            setColors={setColors}\r\n                        />\r\n                    </SettingElement>\r\n                    <SectionDivider />\r\n                    <SettingElement>\r\n                        <SettingButtonRow>\r\n                            <SettingsButton\r\n                                onClick={() => addTheme(design)}\r\n                                text={!themeExists(design.name) ? \"Add Theme\" : \"Save Theme\"}\r\n                                icon={!themeExists(design.name) ? faPlus : faSave}\r\n                                disabled={!isNewDesign ? true : undefined}\r\n                            />\r\n                            <SettingsButton\r\n                                onClick={() => removeTheme(design.name)}\r\n                                text={\"Remove Theme\"}\r\n                                icon={faMinus}\r\n                                disabled={!themeExists(design.name)}\r\n                            />\r\n                        </SettingButtonRow>\r\n                    </SettingElement>\r\n                </StyledSettingsContent>\r\n            </div>\r\n            <DesignPreview name={design.name} colors={design.colors} >\r\n                <ImagePreview src={design.image} />\r\n                <AccordionPreviewContainer>\r\n                    <AccordionPreview title={\"Default\"} colorVar={\"--default-color\"} />\r\n                    <AccordionPreview title={\"Accent\"} colorVar={\"--accent-color\"} />\r\n                    <AccordionPreview title={\"Accent 2\"} colorVar={\"--accent-color2\"} />\r\n                </AccordionPreviewContainer>\r\n            </DesignPreview>\r\n        </>\r\n    )\r\n}\r\n\r\nconst themeEquals = (theme1: Theme, theme2: Theme) => {\r\n    let isEqual = true;\r\n    if (theme1.name !== theme2.name) isEqual = false;\r\n    if (theme1.image !== theme2.image) isEqual = false;\r\n    Object.keys(theme1.colors).forEach((key) => {\r\n        if (theme1.colors[key] !== theme2.colors[key]) isEqual = false;\r\n    })\r\n    return isEqual;\r\n}","export type ChangelogVersion = {\r\n    version: string,\r\n    description?: string,\r\n    changes?: string[]\r\n};\r\n\r\nexport const changelog: ChangelogVersion[] = [\r\n    {\r\n        version: \"0.4.0\",\r\n        changes: [\r\n            \"Added fast forward search\",\r\n            \"Fixed a bug which prevented the link editor to load your data\",\r\n            \"Enhanced responsiveness\",\r\n            \"Added some more default data\",\r\n        ]\r\n    },\r\n    {\r\n        version: \"0.3.0\",\r\n        description: \"This update was hell for me, fucking themes took me way too long and I needed to restructure all the internal design data.Also oof, had so many bugs caused by the not existing peresistence of my data. Hope you enjoy it!\",\r\n        changes: [\r\n            \"Added theme management\",\r\n        ]\r\n    },\r\n    {\r\n        version: \"0.2.1\",\r\n        changes: [\r\n            \"Optimized keyboard control\",\r\n            \"Restructured settings\",\r\n        ]\r\n    },\r\n    {\r\n        version: \"0.2.0\",\r\n        changes: [\r\n            \"Added this changelog\",\r\n            \"Added tabs in settings\",\r\n            \"Added design preview\",\r\n            'Added \"Discard Changes\" button in settings',\r\n            \"Added project logo\",\r\n            \"Changed structure of settings\",\r\n            \"I think I enhanced stability overall a bit\"\r\n        ]\r\n    },\r\n    {\r\n        version: \"0.1.0\",\r\n        description: \"The initial state of this project.\"\r\n    }\r\n];","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { changelog, ChangelogVersion } from \"../../../../data/changelog\"\r\nimport logo from \"../../../../data/pictures/logo.png\"\r\n\r\nconst ChangelogWrapper = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    overflow-y: auto;\r\n    > h1 {\r\n        font-weight: 500;\r\n    }\r\n    > img {\r\n        width: 180px;\r\n        height: 180px;\r\n    }\r\n`;\r\nconst StyledVersion = styled.div`\r\n    width:600px;\r\n    > p {\r\n        margin-bottom: 10px;\r\n    }\r\n`;\r\n\r\nexport const Changelog = () => {\r\n    return (\r\n        <ChangelogWrapper>\r\n            <img src={logo} alt=\"logo\" />\r\n            <h1>Changelog</h1>\r\n            { changelog.map((version: ChangelogVersion) => <Version {...version} />)}\r\n        </ChangelogWrapper>)\r\n}\r\n\r\nconst Version = ({ version, description, changes }: ChangelogVersion) => {\r\n    return <StyledVersion>\r\n        <h2>v{version}</h2>\r\n        {description && <p>{description}</p>}\r\n        {changes && <p>Changes:</p>}\r\n        {changes?.map((change) => <li>{change}</li>)}\r\n    </StyledVersion>\r\n}","import React, { useEffect, useState } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { faTimes, faTrash, faSave, faFire } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport * as Settings from \"../settingsHandler\";\r\nimport { links as defaultLinks, themes as defaultThemes, searchSettings as defaultSearchSettings } from \"../../../data/data\";\r\nimport { IconButton } from \"./IconButton\";\r\n\r\nimport { LinkSettings } from \"./LinkSettings/LinkSettings\";\r\nimport { SearchSettings } from \"./SearchSettings/SearchSettings\";\r\nimport { DesignSettings } from \"./DesignSettings/DesignSettings\";\r\nimport { Changelog } from \"./Changelog/Changelog\";\r\n\r\nconst StyledSettingsWindow = styled.div`\r\n    background-color: var(--bg-color);\r\n    position: relative;\r\n    border: 2px solid var(--default-color);\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 60px 30px 30px 30px;\r\n    box-shadow: 10px 10px 0px var(--accent-color);\r\n`;\r\nconst WindowContent = styled.div`\r\n    width: 100%;\r\n    height: calc(100% - 80px);\r\n    display:flex;\r\n`;\r\n\r\nconst WindowHeader = styled.div`\r\n    ::before{\r\n        content:\"Settings\";\r\n        margin: 5px 20px 0 10px;\r\n    }\r\n    color: var(--bg-color);\r\n    background-color: var(--default-color);\r\n    width:100%;\r\n    height: 32px;\r\n    position:absolute;\r\n    left:0;\r\n    top:0;\r\n    display:flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst WindowFooter = styled.div`\r\n    display:flex;\r\n    justify-content: space-between;\r\n    position:absolute;\r\n    left:30px;\r\n    right:30px;\r\n    bottom:30px;\r\n`;\r\n\r\nexport const StyledSettingsContent = styled.div`\r\n    background-color: var(--bg-color);\r\n    width:400px;\r\n    height:100%;\r\n    margin-right:30px;\r\n    padding-right:20px;\r\n    overflow-y: auto;\r\n`;\r\nexport const SettingsLabel = styled.p`\r\n    font-size: 1rem;\r\n    padding: 10px 0;\r\n`;\r\n\r\nexport const SettingElement = styled.div`\r\n    background-color: var(--bg-color);\r\n    position: relative;\r\n    padding: 10px 0px;\r\n    + {\r\n        margin-top:15px;\r\n    }\r\n`;\r\n\r\nconst CloseButton = styled(IconButton)`\r\n    z-index:15;\r\n    height:30px;\r\n    opacity: 1;\r\n    padding:0;\r\n`;\r\n\r\nexport const SettingsButton = styled(IconButton)`\r\n    background-color: var(--default-color);\r\n    color: var(--bg-color);\r\n    font-size: 1rem;\r\n    padding: 10px 20px;\r\n    :enabled:hover{\r\n        animation: circling-shadow-small 2s ease 0s infinite normal;\r\n    }\r\n`;\r\n\r\nconst Tabbar = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst TabOption = styled.button<{ active: boolean }>`\r\n    font-size: 1rem;\r\n    font-weight: 500;\r\n    transition: .3s;\r\n    height: 100%;\r\n    min-width: 150px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items:center;\r\n    background-color: transparent;\r\n    outline: none;\r\n    border: none;\r\n    cursor: ${({ active }) => active ? \"default\" : \"pointer\"};\r\n    ${({ active }) => active && \"text-shadow: var(--text-shadow-downwards)\"};\r\n    :hover {\r\n        text-shadow: var(--text-shadow-downwards);\r\n    }\r\n`;\r\n\r\ntype props = {\r\n    hidePopup: () => void;\r\n}\r\n\r\nconst TabOptions = [\r\n    \"Links\",\r\n    \"Appearance\",\r\n    \"Searchbar\",\r\n    \"Changelog\",\r\n]\r\n\r\nexport const SettingsWindow = ({ hidePopup }: props) => {\r\n    const [design, setDesign] = useState(defaultThemes[0]);\r\n    const [themes, setThemes] = useState(defaultThemes);\r\n    const [currentTab, setCurrentTab] = useState(TabOptions[0]);\r\n    const [linkGroups, setLinkGroups] = useState(defaultLinks);\r\n    const [searchSettings, setSearchSettings] = useState(defaultSearchSettings);\r\n\r\n    // load local storage states\r\n    useEffect(() => {\r\n        try {\r\n            const lsDesign = Settings.Design.get();\r\n            if (lsDesign)\r\n                setDesign(lsDesign);\r\n        } catch { console.error(\"Your currently applied design appears to be corrupted.\") }\r\n\r\n        try {\r\n            const lsThemes = Settings.Themes.get();\r\n            if (lsThemes)\r\n                setThemes(lsThemes);\r\n        } catch { console.error(\"Your currently saved themes appear to be corrupted.\") }\r\n\r\n        try {\r\n            const lsSearchSettings = Settings.Search.get();\r\n            if (lsSearchSettings)\r\n                setSearchSettings(lsSearchSettings);\r\n        } catch { console.error(\"Your currently applied search settings appear to be corrupted.\") }\r\n\r\n        try {\r\n            const lsLinkGroups = Settings.Links.get();\r\n            if (lsLinkGroups)\r\n                setLinkGroups(lsLinkGroups);\r\n        } catch { console.error(\"Your currently applied links appear to be corrupted.\") }\r\n    }, []);\r\n\r\n    const applyValues = () => {\r\n        Settings.Design.set(design);\r\n        Settings.Themes.set(themes);\r\n        Settings.Search.set(searchSettings);\r\n        Settings.Links.set(linkGroups);\r\n        window.location.reload(false);\r\n    };\r\n\r\n    return (\r\n        <StyledSettingsWindow>\r\n            <WindowHeader>\r\n                <Tabbar>\r\n                    {TabOptions.map((option) =>\r\n                        <TabOption key={option} active={option === currentTab} onClick={() => setCurrentTab(option)}>{option}</TabOption>\r\n                    )}\r\n                </Tabbar>\r\n                <CloseButton\r\n                    inverted={true}\r\n                    onClick={() => hidePopup()}\r\n                    icon={faTimes}\r\n                />\r\n            </WindowHeader>\r\n\r\n            <WindowContent>\r\n                {currentTab === \"Links\" &&\r\n                    <LinkSettings\r\n                        linkGroups={linkGroups}\r\n                        setLinkGroups={setLinkGroups}\r\n                    />}\r\n\r\n                {currentTab === \"Appearance\" &&\r\n                    <DesignSettings\r\n                        design={design}\r\n                        setDesign={setDesign}\r\n                        themes={themes}\r\n                        setThemes={setThemes}\r\n                    />}\r\n\r\n                {currentTab === \"Searchbar\" &&\r\n                    <SearchSettings\r\n                        searchSettings={searchSettings}\r\n                        setSearchSettings={setSearchSettings}\r\n                    />}\r\n\r\n                {currentTab === \"Changelog\" && <Changelog />}\r\n            </WindowContent>\r\n\r\n            {currentTab !== \"Changelog\" &&\r\n                <WindowFooter>\r\n                    <SettingsButton\r\n                        onClick={() => applyValues()}\r\n                        text={\"Apply Changes\"}\r\n                        icon={faSave}\r\n                    />\r\n                    <SettingsButton\r\n                        onClick={() => {\r\n                            window.location.reload(false);\r\n                        }}\r\n                        text={\"Discard Changes\"}\r\n                        icon={faFire}\r\n                    />\r\n                    <SettingsButton\r\n                        onClick={() => {\r\n                            localStorage.clear();\r\n                            window.location.reload(false);\r\n                        }}\r\n                        text={\"Delete All Settings\"}\r\n                        icon={faTrash}\r\n                    />\r\n                </WindowFooter>\r\n            }\r\n        </StyledSettingsWindow >\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport styled from '@emotion/styled';\r\nimport { SettingsWindow } from \"./SettingsWindow/SettingsWindow\";\r\n\r\nconst SettingsPopupToggle = styled.button`\r\n\tposition: fixed;\r\n\ttop: 20px;\r\n\tright:20px;\r\n\tfont-size: 20px;\r\n\r\n\tcolor: var(--default-color);\r\n    background-color:transparent;\r\n    border:none;\r\n\topacity: 0.3;\r\n\r\n\tcursor: pointer;\r\n\ttransition: .3s;\r\n\r\n    :hover{\r\n        opacity: .5;\r\n        color: var(--accent-color2);\r\n        animation:box-flicker 0.01s ease 0s infinite alternate;\r\n    }\r\n    :focus{\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst PopupCover = styled.div`\r\n    position: fixed;\r\n\tleft:0px;\r\n    width:100%;\r\n    height:100%;\r\n    background-color: var(--bg-color);\r\n    opacity: 0.7;\r\n`;\r\n\r\nconst SettingsWrapper = styled.div`\r\n    position: fixed;\r\n\ttop:0px;\r\n    left:0px;\r\n    right:0px;\r\n    bottom:0px;\r\n    padding:100px;\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:center;\r\n    align-items:center;\r\n`;\r\n\r\nexport const Settings = () => {\r\n    const [showSettings, setShowSettings] = useState(false)\r\n\r\n    const hidePopup = () => setShowSettings(false);\r\n\r\n    return (\r\n        <>\r\n            <SettingsPopupToggle onClick={() => setShowSettings(true)}>\r\n                <FontAwesomeIcon icon={faSlidersH} />\r\n            </SettingsPopupToggle>\r\n            {showSettings && (\r\n                <SettingsWrapper>\r\n                    <PopupCover onClick={() => {/*hidePopup()*/ }} />\r\n                    <SettingsWindow hidePopup={hidePopup} />\r\n                </SettingsWrapper>\r\n            )}\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport styled from \"@emotion/styled\";\r\nimport { Design as DesignSettings } from \"./Settings/settingsHandler\";\r\n\r\nimport { LinkContainer } from \"./LinkContainer/LinkContainer\"\r\nimport { Searchbar } from \"./Searchbar/Searchbar\";\r\nimport { Settings } from \"./Settings/Settings\";\r\n\r\nimport { images } from \"../data/data\"\r\n\r\nconst StyledStartpage = styled.div`\r\n    padding:0px 100px;\r\n    display:flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    align-items:center;\r\n    height:calc(100% - 100px);\r\n`;\r\n\r\nconst Image = styled.img`\r\n    height:400px;\r\n    width:400px;\r\n    border: 2px solid var(--default-color);\r\n    padding: 10px;\r\n    object-fit:cover;\r\n\r\n    animation:circling-shadow 4s ease 0s infinite normal;\r\n`;\r\n\r\nexport const Startpage = () => {\r\n    const [img, setImg] = useState(DesignSettings.get()?.image || images[0].value);\r\n\r\n    return (\r\n        <>\r\n            <StyledStartpage>\r\n                <div>\r\n                    <Image src={img} onError={() => setImg(images[0].value)} />\r\n                </div>\r\n                <LinkContainer />\r\n            </StyledStartpage>\r\n            <Searchbar />\r\n            <Settings />\r\n        </>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport './base/variables.css';\r\n\r\nimport { Startpage } from \"./Startpage/Startpage\"\r\nimport * as Settings from \"./Startpage/Settings/settingsHandler\"\r\n\r\nconst App = () => {\r\n\r\n\t//Apply colors\r\n\tvar root = document.documentElement;\r\n\ttry {\r\n\t\tconst colors = Settings.Design.get()?.colors;\r\n\t\tif (colors)\r\n\t\t\tObject.keys(colors).forEach(key => {\r\n\t\t\t\troot.style.setProperty(key, colors[key]);\r\n\t\t\t});\r\n\t} catch { }\r\n\r\n\treturn <Startpage />;\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './base/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/pic_1.03400a86.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic_2.42b93d95.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic_3.8796fde5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic_4.66ccb182.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic_5.6e9543cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic_6.65b20253.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic_7.6516acf6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic_8.ba1342f4.png\";","module.exports = __webpack_public_path__ + \"static/media/google.9ef22081.svg\";","module.exports = __webpack_public_path__ + \"static/media/duckduckgo.e5067b7c.svg\";","module.exports = __webpack_public_path__ + \"static/media/qwant.f90c346a.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.06ef2568.png\";"],"sourceRoot":""}