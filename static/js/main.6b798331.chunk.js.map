{"version":3,"sources":["Startpage/Settings/settingsHandler.ts","Startpage/LinkContainer/Accordion/Accordion.tsx","data/data.ts","Startpage/LinkContainer/LinkContainer.tsx","Startpage/Searchbar/Searchbar.tsx","Startpage/Settings/SettingsWindow/IconButton.tsx","Startpage/Settings/SettingsWindow/OptionSlider.tsx","Startpage/Settings/SettingsWindow/OptionTextInput.tsx","Startpage/Settings/SettingsWindow/OptionTextArea.tsx","Startpage/Settings/SettingsWindow/ColorPicker.tsx","Startpage/Settings/SettingsWindow/SettingsWindow.tsx","Startpage/Settings/Settings.tsx","Startpage/Startpage.tsx","App.tsx","serviceWorker.js","index.js","data/pictures/pic_1.jpg","data/pictures/pic_2.jpg","data/pictures/pic_3.jpg","data/pictures/pic_4.jpg","data/pictures/pic_5.jpg","data/pictures/pic_6.jpg","data/pictures/pic_7.jpg","data/pictures/pic_8.png","data/pictures/google.svg","data/pictures/duckduckgo.svg","data/pictures/qwant.svg"],"names":["getSettings","JSON","parse","localStorage","getItem","getValue","key","StyledAccordionContainer","styled","div","AccordionContainer","props","children","StyledAccordionGroup","AccordionContent","width","AccordionTitleWrapper","active","AccordionTitle","h1","AccordionGroup","parent","title","onClick","useState","contentWidth","setContentWidth","useEffect","clientWidth","length","ref","elem","parentElement","className","links","label","value","images","pic_1","pic_2","pic_3","pic_4","pic_5","pic_6","pic_7","pic_8","searchEngines","colors","LinkItem","a","LinkContainer","linkGroups","setActive","lsLinks","Settings","e","map","group","groupIndex","link","linkIndex","href","StyledSearchbarContainer","StyledSearchbar","input","SearchIcon","src","Searchbar","engine","settingsHandler","searchSymbol","startsWith","google","qwant","duckduckgo","placeholder","type","onKeyUp","which","query","currentTarget","window","location","autoFocus","StyledIconButton","button","inverted","IconButton","icon","text","SliderWrapper","OptionSlider","values","onChange","settingsKey","index","setIndex","forEach","val","i","handleChange","newIndex","disabled","faAngleLeft","faAngleRight","StyledOptionTextInput","StyledInput","OptionTextInput","setValue","defaultValue","faCheck","StyledOptionTextArea","StyledTextArea","textarea","stringify","OptionTextArea","initialValue","ColorPickerContainer","ColorOption","StyledMaterialPicker","ColorPicker","newColors","setNewColors","Object","keys","currentColor","setCurrentColor","theFUCKINGcolors","color","c","result","tmp","hex","StyledSettingsWindow","StyledSettingsContent","SettingElement","CloseButton","SettingsButton","ImagePreview","img","SettingsWindow","hidePopup","setLinkGroups","image","setImage","searchEngine","setSearchEngine","setStorageValue","settings","setItem","faTimes","reload","faSyncAlt","clear","faTrash","SettingsPopupToggle","PopupCover","SettingsWrapper","showSettings","setShowSettings","faSlidersH","StyledStartpage","Image","Startpage","setImg","onError","App","colorSettings","root","document","documentElement","parsedColorSettings","style","setProperty","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.6b798331.chunk.js","sourcesContent":["type Settings = {\r\n    [key: string]: any;\r\n}\r\n\r\nconst getSettings = () => JSON.parse(localStorage.getItem(\"settings\") || \"{}\") as Settings;\r\n\r\nexport const getValue = (key: string) => {\r\n    const settings = getSettings();\r\n    return settings[key];\r\n}\r\n\r\nexport const setValue = (key: string, value: string) => {\r\n    const settings = getSettings();\r\n    settings[key] = value;\r\n    localStorage.setItem(\"settings\", JSON.stringify(settings));\r\n}\r\n","import React, { PropsWithChildren, useEffect, useState } from 'react';\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst StyledAccordionContainer = styled.div`\r\n    margin-left: 100px;\r\n    display:flex;\r\n    width:calc(100% - 400px - 100px);\r\n\r\n    @media only screen and (max-width: 1730px) {\r\n`;\r\n\r\nexport const AccordionContainer = (props: PropsWithChildren<{}>) => {\r\n    return <StyledAccordionContainer>\r\n        {props.children}\r\n    </StyledAccordionContainer>\r\n}\r\n\r\nconst StyledAccordionGroup = styled.div`\r\n    height: 400px;\r\n    display: flex;\r\n    padding: 0 10px;\r\n    flex-direction: row;\r\n    border-right:3px solid var(--default-color);\r\n    :first-of-type{\r\n        border-left:3px solid var(--default-color);\r\n    }\r\n`;\r\n\r\nconst AccordionContent = styled.div< { width: number }>`\r\n    height: 100%;\r\n    width: ${({ width }) => width + \"px\"};\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    overflow: hidden;\r\n    transition:.3s;\r\n`;\r\n/*altAccordionTitleWrapper\r\nconst altAccordionTitleWrapper = styled.div< { active: boolean }>`\r\n    height: 100%;\r\n    width: 90px;\r\n    background-color: var(--accent-color2);\r\n    cursor: ${({ active }) =>\r\n        active ? \"default\" : \"pointer\"\r\n    };\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    opacity: 0.8;\r\n    position: relative;\r\n    ::before {\r\n        content: \"\";\r\n        position: absolute;\r\n        bottom: 0px;\r\n        width: 100%;\r\n        height: ${({ active }) => active ? \"390px\" : \"0\"};\r\n        background-color: var(--accent-color);\r\n        transition:  ${({ active }) => active ? \"1s\" : \".5s\"};\r\n    }\r\n    :hover{\r\n        ${({ active }) => !active && `\r\n            ::before {\r\n                height: 50%;\r\n            }\r\n            > .wave {\r\n                top: 180px;\r\n                ::before{\r\n                    animation: wave 12s infinite cubic-bezier(0.71, 0.33, 0.33, 0.68);\r\n                    top: -25%;\r\n                    left: 50%;\r\n                }\r\n            }\r\n        `}\r\n    }\r\n\r\n   > .wave {\r\n        width: 90px;\r\n        height: 50px;\r\n        position: absolute;\r\n        top: ${({ active }) => active ? \"0px\" : \"350px\"};\r\n        overflow: hidden;\r\n        transition:  ${({ active }) => active ? \"1s\" : \".5s\"};\r\n        ::before{\r\n            content:\"\";\r\n            width: 180px;\r\n            height: 185px;\r\n            position: absolute;\r\n            top: -25%;\r\n            left: 50%;\r\n            margin-left: -90px;\r\n            margin-top: -140px;\r\n            border-radius: 37%;\r\n            background: var(--accent-color2);\r\n            animation: wave 12s infinite cubic-bezier(0.71, 0.33, 0.33, 0.68);\r\n        }\r\n        @keyframes wave {\r\n            from { transform: rotate(0deg);}\r\n            from { transform: rotate(360deg);}\r\n        }\r\n    }\r\n\r\n    ${({ active }) =>\r\n        !active && `\r\n        :hover{\r\n            > * {\r\n                text-shadow:\r\n                    4px 0px 0 var(--accent-color),\r\n                    3px 0px 0 var(--accent-color),\r\n                    2px 0px 0 var(--accent-color),\r\n                    1px 0px 0 var(--accent-color);\r\n            }\r\n        }\r\n    `\r\n    };\r\n`;\r\n*/\r\n\r\nconst AccordionTitleWrapper = styled.div< { active: boolean }>`\r\nborder: 4px solid var(--accent-color);\r\n    height: 100%;\r\n    width: 90px;\r\n    cursor: ${({ active }) =>\r\n        active ? \"default\" : \"pointer\"\r\n    };\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    opacity: 0.8;\r\n    position: relative;\r\n    ::before {\r\n        content: \"\";\r\n        position: absolute;\r\n        bottom: 0px;\r\n        width: 100%;\r\n        height: ${({ active }) => active ? \"390px\" : \"0\"};\r\n        background-color: var(--accent-color);\r\n        transition:  ${({ active }) => active ? \"1s\" : \".5s\"};\r\n    }\r\n    :hover{\r\n        ${({ active }) => !active && `\r\n            ::before {\r\n                height: 50%;\r\n            }\r\n            > .wave {\r\n                top: 180px;\r\n                ::before{\r\n                    animation: wave 12s infinite cubic-bezier(0.71, 0.33, 0.33, 0.68);\r\n                    top: -25%;\r\n                    left: 50%;\r\n                }\r\n            }\r\n        `}\r\n    }\r\n\r\n   > .wave {\r\n        /* Waves Source: https://codepen.io/mburakerman/pen/eRZZEv */\r\n        width: 90px;\r\n        height: 50px;\r\n        position: absolute;\r\n        top: ${({ active }) => active ? \"0px\" : \"350px\"};\r\n        overflow: hidden;\r\n        transition:  ${({ active }) => active ? \"1s\" : \".5s\"};\r\n        ::before{\r\n            content:\"\";\r\n            width: 180px;\r\n            height: 185px;\r\n            position: absolute;\r\n            top: -25%;\r\n            left: 50%;\r\n            margin-left: -90px;\r\n            margin-top: -140px;\r\n            border-radius: 37%;\r\n            background: var(--bg-color);\r\n            animation: wave 12s infinite cubic-bezier(0.71, 0.33, 0.33, 0.68);\r\n        }\r\n        @keyframes wave {\r\n            from { transform: rotate(0deg);}\r\n            from { transform: rotate(360deg);}\r\n        }\r\n    }\r\n\r\n\r\n    ${({ active }) =>\r\n        !active && `\r\n        :hover{\r\n            > * {\r\n                color: var(--bg-color);\r\n                text-shadow:\r\n                    5px 0px 0 var(--accent-color),\r\n                    4px 0px 0 var(--accent-color),\r\n                    3px 0px 0 var(--accent-color),\r\n                    2px 0px 0 var(--accent-color),\r\n                    1px 0px 0 var(--accent-color),\r\n                    -1px 0px 0 var(--accent-color),\r\n                    0px 1px 0 var(--accent-color),\r\n                    0px -1px 0 var(--accent-color);\r\n            }\r\n        }\r\n    `\r\n    };\r\n`;\r\n\r\nconst AccordionTitle = styled.h1< { title: string, active: boolean }>`\r\n    transform: rotate(90deg);\r\n    min-width: max-content;\r\n    color: ${({ active }) => active ? \"var(--bg-color)\" : \"var(--default-color)\"};\r\n    transition: .5s;\r\n    letter-spacing: 5px;\r\n`;\r\n\r\ntype groupProps = PropsWithChildren<{\r\n    active: boolean,\r\n    title: string,\r\n    onClick: () => void,\r\n}>\r\n\r\nexport const AccordionGroup = ({ active, title, children, onClick }: groupProps) => {\r\n    const [contentWidth, setContentWidth] = useState(active ? 500 : 0);\r\n    let parent: HTMLElement;\r\n    useEffect(() => {\r\n        if (parent && active) {\r\n            setContentWidth(\r\n                parent.clientWidth - (parent.children.length * 113) - 3\r\n            );\r\n        } else {\r\n            setContentWidth(0);\r\n        }\r\n    }, [active])\r\n\r\n    return <StyledAccordionGroup ref={elem => parent = elem?.parentElement as HTMLElement}>\r\n        <AccordionTitleWrapper active={active} onClick={onClick}>\r\n            <div className={\"wave\"} />\r\n            <AccordionTitle active={active} title={title}>\r\n                {title}\r\n            </AccordionTitle>\r\n        </AccordionTitleWrapper>\r\n        <AccordionContent width={contentWidth}>\r\n            {children}\r\n        </AccordionContent>\r\n    </StyledAccordionGroup>\r\n}\r\n","import pic_1 from \"./pictures/pic_1.jpg\";\r\nimport pic_2 from \"./pictures/pic_2.jpg\";\r\nimport pic_3 from \"./pictures/pic_3.jpg\";\r\nimport pic_4 from \"./pictures/pic_4.jpg\";\r\nimport pic_5 from \"./pictures/pic_5.jpg\";\r\nimport pic_6 from \"./pictures/pic_6.jpg\";\r\nimport pic_7 from \"./pictures/pic_7.jpg\";\r\nimport pic_8 from \"./pictures/pic_8.png\";\r\n\r\nexport type dataElem = {\r\n\tlabel: string,\r\n\tvalue: string,\r\n}\r\n\r\nexport type linkGroup = {\r\n\ttitle: string;\r\n\tlinks: dataElem[];\r\n}\r\n\r\n/*\r\n──────▄▌▐▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀​▀▀▀▀▀▀▌\r\n───▄▄██▌█ BEEP BEEP\r\n▄▄▄▌▐██▌█ GAY PORN DELIVERY\r\n███████▌█▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄​▄▄▄▄▄▄▌\r\n▀(@)▀▀▀▀▀▀▀(@)(@)▀▀▀▀▀▀▀▀▀▀▀▀▀​▀▀▀▀(@)▀\r\n*/\r\nexport const links: linkGroup[] = [\r\n\t{\r\n\t\ttitle: \"Reddit\",\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"r/startpages (haha thats u)\",\r\n\t\t\t\tvalue: \"https://www.reddit.com/r/startpages/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"r/unixporn\",\r\n\t\t\t\tvalue: \"https://www.reddit.com/r/unixporn/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"r/rainmeter\",\r\n\t\t\t\tvalue: \"https://www.reddit.com/r/rainmeter/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"r/AnimalsBeingDerps (ﾉ◕ヮ◕)ﾉ*:・ﾟ✧\",\r\n\t\t\t\tvalue: \"https://www.reddit.com/r/AnimalsBeingDerps/\",\r\n\t\t\t},\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\ttitle: \"3D Modelling\",\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Blender\",\r\n\t\t\t\tvalue: \"https://www.blender.org/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"BlenderGuru\",\r\n\t\t\t\tvalue: \"https://www.blenderguru.com/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Poliigon\",\r\n\t\t\t\tvalue: \"https://www.poliigon.com/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Blender tutorial\",\r\n\t\t\t\tvalue: \"https://www.youtube.com/watch?v=NyJWoyVx_XI&list=PLjEaoINr3zgEq0u2MzVgAaHEBt--xLB6U\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"The other Blender tutorial\",\r\n\t\t\t\tvalue: \"https://www.youtube.com/watch?v=bpvh-9H8S1g&list=PL8eKBkZzqDiU-qcoaghCz04sMitC1yx6k&index=1\",\r\n\t\t\t},\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\ttitle: \"Design\",\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"PixlrX\",\r\n\t\t\t\tvalue: \"https://pixlr.com/x/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"AI Image Enlarger\",\r\n\t\t\t\tvalue: \"https://bigjpg.com/en\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Img to Svg Converter\",\r\n\t\t\t\tvalue: \"https://picsvg.com/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"FontAwesome\",\r\n\t\t\t\tvalue: \"https://fontawesome.com/icons\",\r\n\t\t\t},\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\ttitle: \"Music\",\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"i wanna be a cowboy\",\r\n\t\t\t\tvalue: \"https://www.youtube.com/watch?v=8zWz92f_HGs\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"let the bodies hit the floor\",\r\n\t\t\t\tvalue: \"https://www.youtube.com/watch?v=b--VKaCB9u0\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Nobody Kanna Cross It\",\r\n\t\t\t\tvalue: \"https://www.youtube.com/watch?v=2wqTnwJGvtc\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Smug Dancin\",\r\n\t\t\t\tvalue: \"https://www.youtube.com/watch?v=eNZ9Od1jQ4Q\",\r\n\t\t\t},\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\ttitle: \"Sauce\",\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"JS Library - React\",\r\n\t\t\t\tvalue: \"https://reactjs.org/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"CSS Writing Library - EmotionJS\",\r\n\t\t\t\tvalue: \"https://emotion.sh/docs/introduction\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Pictures - DeathAndMilk\",\r\n\t\t\t\tvalue: \"https://www.instagram.com/deathandmilk_/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Icons - FontAwesome\",\r\n\t\t\t\tvalue: \"https://fontawesome.com/icons\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Text Flicker - CodeMyUI\",\r\n\t\t\t\tvalue: \"https://codemyui.com/crt-screen-text-flicker-animation-in-pure-css/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Wave Animation - mburakerman\",\r\n\t\t\t\tvalue: \"https://codepen.io/mburakerman/pen/eRZZEv\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"About me t(ಠ益ಠt)\",\r\n\t\t\t\tvalue: \"/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Da real sauce ԅ(♡﹃♡ԅ)\",\r\n\t\t\t\tvalue: \"https://www.youtube.com/watch?v=qr89xoZyE1g\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Even more real sauce ( ͡° ͜ʖ ͡°)\",\r\n\t\t\t\tvalue: \"https://www.youtube.com/watch?v=VLhJOd_TFiI\",\r\n\t\t\t},\r\n\t\t]\r\n\t},\r\n]\r\n\r\nexport const images: dataElem[] = [\r\n\t{ label: \"pic_1\", value: pic_1 },\r\n\t{ label: \"pic_2\", value: pic_2 },\r\n\t{ label: \"pic_3\", value: pic_3 },\r\n\t{ label: \"pic_4\", value: pic_4 },\r\n\t{ label: \"pic_5\", value: pic_5 },\r\n\t{ label: \"pic_6\", value: pic_6 },\r\n\t{ label: \"pic_7\", value: pic_7 },\r\n\t{ label: \"pic_8\", value: pic_8 },\r\n];\r\n\r\nexport const searchEngines: dataElem[] = [\r\n\t{\r\n\t\tlabel: \"DuckDuckGo\",\r\n\t\tvalue: \"duckduckgo.com/\",\r\n\t},\r\n\t{\r\n\t\tlabel: \"Google\",\r\n\t\tvalue: \"google.com/search\",\r\n\t},\r\n\t{\r\n\t\tlabel: \"Qwant\",\r\n\t\tvalue: \"qwant.com/\",\r\n\t},\r\n];\r\n\r\nexport type colorsType = {\r\n\t[key: string]: string\r\n}\r\n\r\nexport const colors: colorsType = {\r\n\t\"--bg-color\": \"rgb(46, 46, 46)\",\r\n\t\"--default-color\": \"rgb(230, 230, 230)\",\r\n\t\"--accent-color\": \"rgb(255, 180, 230)\",\r\n\t\"--accent-color2\": \"rgb(180, 255, 230)\",\r\n}","import React, { useState } from 'react';\r\nimport styled from \"@emotion/styled\";\r\nimport { AccordionContainer, AccordionGroup } from './Accordion/Accordion';\r\nimport * as Settings from \"../Settings/settingsHandler\";\r\nimport { linkGroup, links } from \"../../data/data\";\r\n\r\nconst LinkItem = styled.a`\r\n    width: fit-content;\r\n    white-space: nowrap;\r\n    position:relative;\r\n    padding: 10px 0 10px 30px;\r\n    font-size:1rem;\r\n    transition:.5s;\r\n\r\n    ::before{\r\n        position:absolute;\r\n        left:0px;\r\n        bottom:5px;\r\n        z-index:0;\r\n        content: \"\";\r\n        height:5px;\r\n        width:100%;\r\n        background-color: var(--accent-color);\r\n        transition:.5s;\r\n        opacity:.7;\r\n    }\r\n\r\n    :hover {\r\n        color: var(--accent-color2);\r\n        animation:text-flicker 0.01s ease 0s infinite alternate;\r\n    }\r\n\r\n`;\r\n\r\nexport const LinkContainer = () => {\r\n    const [active, setActive] = useState(0);\r\n    let linkGroups: linkGroup[];\r\n    try {\r\n        const lsLinks = Settings.getValue(\"link-groups\");\r\n        if (lsLinks)\r\n            linkGroups = JSON.parse(lsLinks);\r\n        else\r\n            linkGroups = links;\r\n    }\r\n    catch (e) { linkGroups = [] as linkGroup[] }\r\n\r\n    return <AccordionContainer>\r\n        {linkGroups.map((group, groupIndex) =>\r\n            <AccordionGroup key={\"AccordionGroup\" + groupIndex} active={active === groupIndex} title={group.title} onClick={() => setActive(groupIndex)}>\r\n                {group.links.map((link, linkIndex) =>\r\n                    <LinkItem key={\"LinkItem\" + linkIndex} href={link.value}>{link.label}</LinkItem>\r\n                )}\r\n            </AccordionGroup>\r\n        )}\r\n    </AccordionContainer>\r\n}","import React from 'react';\r\nimport styled from \"@emotion/styled\";\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as settingsHandler from \"../Settings/settingsHandler\";\r\n\r\nimport google from \"../../data/pictures/google.svg\";\r\nimport duckduckgo from \"../../data/pictures/duckduckgo.svg\";\r\nimport qwant from \"../../data/pictures/qwant.svg\";\r\n\r\nconst StyledSearchbarContainer = styled.div`\r\n    position: fixed;\r\n    left: 100px;\r\n    right: 50px;\r\n    bottom: 40px;\r\n    height:min-content;\r\n    `;\r\nconst StyledSearchbar = styled.input`\r\n    width: 100%;\r\n    font-size: 30pt;\r\n    \r\n    background-color: rgba(0,0,0,0);\r\n    color: var(--default-color);\r\n    transition: .3s;\r\n    border: none;\r\n    border-bottom: 2px solid var(--default-color);\r\n    opacity: 0.3;\r\n    \r\n    ::placeholder {\r\n        color: var(--default-color);\r\n    }\r\n    \r\n    :hover, :focus {\r\n        opacity: 1;\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst SearchIcon = styled.div<{ src: string }>`\r\n    position: fixed;\r\n    left: 35px;\r\n    bottom: 40px;\r\n    height: 2.9rem;\r\n    width: 2.9rem;\r\n\r\n    background: var(--default-color);\r\n    \r\n    -webkit-mask-size: cover;\r\n    mask-size: cover;\r\n    -webkit-mask-image: url(${({ src }) => src});\r\n    mask-image: url(${({ src }) => src});\r\n`;\r\n\r\nexport const Searchbar = () => {\r\n    const engine: string = settingsHandler.getValue(\"search-engine\") || \"duckduckgo.com/\";\r\n    const searchSymbol = engine.startsWith(\"google\") ? google\r\n        : engine.startsWith(\"qwant\") ? qwant\r\n            : duckduckgo;\r\n\r\n    function redirectToSearch(query: string) {\r\n        window.location.href = \"https://\" + engine + \"?q=\" + query;\r\n    }\r\n\r\n    return (\r\n        <StyledSearchbarContainer>\r\n            <StyledSearchbar\r\n                placeholder=\"Always stay clean!\"\r\n                type=\"input\"\r\n                onKeyUp={e => e.which === 13 && redirectToSearch(e.currentTarget.value)}\r\n                autoFocus={true}\r\n            />\r\n            <SearchIcon src={searchSymbol} />\r\n        </StyledSearchbarContainer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { FontAwesomeIcon, FontAwesomeIconProps } from '@fortawesome/react-fontawesome'\r\nimport styled from '@emotion/styled';\r\n\r\nconst StyledIconButton = styled.button<{ inverted?: boolean }>`\r\n    color: ${({ inverted }) => (inverted ? \"var(--bg-color)\" : \"var(--default-color)\")};\r\n    background-color: transparent;\r\n    min-width:50px;\r\n\tfont-size: 20px;\r\n    border: none;\r\n\topacity: 0.7;\r\n\tcursor: pointer;\r\n\ttransition: .3s;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    :enabled:hover{\r\n        ${({ inverted }) => inverted ?\r\n        `filter: \r\n            drop-shadow(2px 2px 0 var(--accent-color))\r\n            drop-shadow(-2px -2px 0 var(--accent-color2))\r\n            drop-shadow(-2px 2px 0 var(--accent-color))\r\n            drop-shadow(2px -2px 0 var(--accent-color2))`\r\n        : \"animation: box-flicker 0.01s ease 0s infinite alternate\"};\r\n    }\r\n    :focus{\r\n        outline: none;\r\n    }\r\n    :disabled{\r\n        opacity: 0.2;\r\n        cursor: default;\r\n    }\r\n\r\n    > span{\r\n        margin-right:10px;\r\n    }\r\n`;\r\ntype props =\r\n    Pick<FontAwesomeIconProps, \"icon\">\r\n    & React.ButtonHTMLAttributes<HTMLButtonElement>\r\n    & {\r\n        text?: string;\r\n        inverted?: boolean;\r\n    };\r\n\r\n\r\nexport const IconButton = ({\r\n    icon,\r\n    text,\r\n    ...props\r\n}: props) => {\r\n    return <StyledIconButton {...props}>\r\n        {text && <span>{text}</span>}\r\n        <FontAwesomeIcon icon={icon}></FontAwesomeIcon>\r\n    </StyledIconButton>\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\r\nimport styled from '@emotion/styled';\r\n\r\nimport * as Settings from \"../settingsHandler\";\r\nimport { IconButton } from \"./IconButton\";\r\n\r\nconst SliderWrapper = styled.div`\r\n    height: 20px;\r\n    width: 400px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: space-between;\r\n    justify-content: space-between;\r\n    padding:5px 0;\r\n`;\r\n\r\ntype props = {\r\n    values: { label: string, value: string }[],\r\n    onChange: (value: string) => void,\r\n    settingsKey: string,\r\n}\r\n\r\nexport const OptionSlider = ({ values, onChange, settingsKey }: props) => {\r\n    const [index, setIndex] = useState(0);\r\n    useEffect(() => {\r\n        values.forEach((val, i) => {\r\n            Settings.getValue(settingsKey) === val.value && i !== index && setIndex(i)\r\n        })\r\n    }, []);\r\n\r\n    const handleChange = (newIndex: number) => {\r\n        setIndex(newIndex);\r\n        onChange(values[newIndex].value)\r\n    }\r\n\r\n    return (\r\n        <SliderWrapper>\r\n            <IconButton\r\n                disabled={index <= 0}\r\n                onClick={() => { handleChange(index - 1) }}\r\n                icon={faAngleLeft}\r\n            />\r\n\r\n            {values[index].label}\r\n\r\n            <IconButton\r\n                disabled={index >= values.length - 1}\r\n                onClick={() => handleChange(index + 1)}\r\n                icon={faAngleRight}\r\n            />\r\n        </SliderWrapper>\r\n    )\r\n}","import React, { useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport * as Settings from \"../settingsHandler\";\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { IconButton } from \"./IconButton\";\r\n\r\nconst StyledOptionTextInput = styled.div`\r\n    background-color: var(--bg-color);\r\n    border: 2px solid var(--default-color);\r\n    display:flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 10px 0 10px 20px;\r\n    width:376px;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n    background-color: var(--bg-color);\r\n    color: var(--default-color);\r\n    border: none;\r\n    height:100%;\r\n    outline:none;\r\n    width: calc(100% - 82px);\r\n`;\r\n\r\ntype props = {\r\n    settingsKey: string,\r\n    onChange: (value: string) => void,\r\n}\r\n\r\nexport const OptionTextInput = ({ settingsKey, onChange }: props) => {\r\n    const [value, setValue] = useState(Settings.getValue(settingsKey) || \"\");\r\n\r\n    return <StyledOptionTextInput>\r\n        <StyledInput\r\n            type={\"text\"}\r\n            onKeyUp={e => e.which === 13\r\n                ? onChange(value)\r\n                : setValue(e.currentTarget.value)\r\n            }\r\n            placeholder={\"Picture URL\"}\r\n            defaultValue={value}\r\n        />\r\n        <IconButton icon={faCheck} onClick={(e) => onChange(value)} />\r\n    </StyledOptionTextInput>\r\n}","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst StyledOptionTextArea = styled.div`\r\n    background-color: var(--bg-color);\r\n    border: 2px solid var(--default-color);\r\n    display:flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 10px 0 10px 20px;\r\n    width:calc(100% - 450px);\r\n    height:calc(100% - 30px);\r\n`;\r\n\r\nconst StyledTextArea = styled.textarea`\r\n    background-color: var(--bg-color);\r\n    color: var(--default-color);\r\n    border: none;\r\n    height: 100%;\r\n    outline: none;\r\n    width: 100%;\r\n    resize: none;\r\n`;\r\n\r\ntype props = {\r\n    initialValue: string,\r\n    settingsKey: string,\r\n    onChange: (value: string) => void,\r\n}\r\n\r\nconst placeholder = JSON.stringify(\r\n    [\r\n        {\r\n            title: \"Title\",\r\n            links: [\r\n                {\r\n                    label: \"label\",\r\n                    value: \"url\",\r\n                },\r\n                {\r\n                    label: \"label\",\r\n                    value: \"url\",\r\n                },\r\n                {\r\n                    label: \"label\",\r\n                    value: \"url\",\r\n                },\r\n            ]\r\n        },\r\n    ], null, 4);\r\n\r\nexport const OptionTextArea = ({ initialValue, settingsKey, onChange }: props) => {\r\n\r\n    return <StyledOptionTextArea>\r\n        <StyledTextArea\r\n            onKeyUp={e => onChange(e.currentTarget.value)}\r\n            placeholder={placeholder}\r\n            defaultValue={initialValue}\r\n        />\r\n    </StyledOptionTextArea>\r\n}","import React, { useState } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { MaterialPicker, ColorResult } from \"react-color\";\r\n\r\nimport { colors } from \"../../../data/data\";\r\n\r\n\r\nconst ColorPickerContainer = styled.div`\r\n    height: 200px;\r\n    display: flex;\r\n    > div {\r\n        padding: 0 10px;\r\n        width: 180px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\nconst ColorOption = styled.div<{ active: boolean }>`\r\n    width: 100%;\r\n    padding: 5px 0;\r\n    cursor: pointer;\r\n    opacity: ${({ active }) => !active && \"0.7\"};\r\n    color: ${({ active }) => active && \"var(--accent-color)\"};\r\n    :hover {\r\n        color: var(--accent-color2);\r\n        animation:text-flicker 0.01s ease 0s infinite alternate;\r\n    }\r\n`;\r\n\r\nconst StyledMaterialPicker = styled.div`\r\n    > div * {\r\n        background-color: var(--bg-color)!important;\r\n        color: var(--default-color)!important;\r\n        box-shadow: none;\r\n    }\r\n    > div{\r\n        border: 2px solid var(--default-color);\r\n    }\r\n`;\r\ntype props = {\r\n    newColors: string,\r\n    setNewColors: (value: string) => void\r\n}\r\n\r\nexport const ColorPicker = ({ newColors, setNewColors }: props) => {\r\n    const [currentColor, setCurrentColor] = useState(Object.keys(colors)[0]);\r\n\r\n    /* I hate this fucking function, go fucking kill yourself */\r\n    const theFUCKINGcolors = JSON.parse(newColors);\r\n\r\n    const handleChange = (result: ColorResult) => {\r\n        let tmp = { ...theFUCKINGcolors };\r\n        tmp[currentColor] = result.hex;\r\n        setNewColors(JSON.stringify(tmp));\r\n    }\r\n\r\n    return (\r\n        <ColorPickerContainer>\r\n            <div>\r\n                {Object.keys(colors).map((key) =>\r\n                    <ColorOption key={key} active={key === currentColor} onClick={() => setCurrentColor(key)}>{key}</ColorOption>\r\n                )}\r\n            </div>\r\n            <StyledMaterialPicker>\r\n                <MaterialPicker color={theFUCKINGcolors[currentColor]} onChange={(c) => c && handleChange(c)} />\r\n            </StyledMaterialPicker>\r\n        </ColorPickerContainer>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { faTimes, faSyncAlt, faTrash } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport * as Settings from \"../settingsHandler\";\r\nimport { OptionSlider } from \"./OptionSlider\";\r\nimport { OptionTextInput } from \"./OptionTextInput\";\r\nimport { OptionTextArea } from \"./OptionTextArea\";\r\nimport { searchEngines, images, links, colors } from \"../../../data/data\";\r\nimport { IconButton } from \"./IconButton\";\r\nimport { ColorPicker } from './ColorPicker';\r\n\r\nconst StyledSettingsWindow = styled.div`\r\n    background-color: var(--bg-color);\r\n    position: relative;\r\n    border: 2px solid var(--default-color);\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 60px 30px 30px 30px;\r\n    box-shadow: 10px 10px 0px var(--accent-color);\r\n    animation-fill-mode: both;\r\n    display:flex;\r\n\r\n    ::before{\r\n        content:\"Settings\";\r\n        color: var(--bg-color);\r\n        padding: 5px 0 0 10px;\r\n        background-color: var(--default-color);\r\n        width:calc(100% - 10px);\r\n        height: 25px;\r\n        position:absolute;\r\n        z-index:10;\r\n        left:0;\r\n        top:0;\r\n    }\r\n`;\r\n\r\nconst StyledSettingsContent = styled.div`\r\n    background-color: var(--bg-color);\r\n    width:400px;\r\n    height:100%;\r\n    margin-right:30px;\r\n    padding-right:20px;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst SettingElement = styled.div`\r\n    background-color: var(--bg-color);\r\n    position: relative;\r\n    padding: 10px 0px;\r\n    z-index: 10;\r\n    display:flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst CloseButton = styled(IconButton)`\r\n    position: absolute;\r\n    right:0px;\r\n    top:0px;\r\n    z-index:15;\r\n    height:30px;\r\n    opacity: 1;\r\n    padding:0;\r\n`;\r\n\r\nconst SettingsButton = styled(IconButton)`\r\n    background-color: var(--default-color);\r\n    color: var(--bg-color);\r\n    font-size: 1rem;\r\n    padding: 10px 20px;\r\n    :enabled:hover{\r\n        animation: circling-shadow-small 2s ease 0s infinite normal;\r\n    }\r\n`;\r\n\r\nconst ImagePreview = styled.img`\r\n    margin: 10px 80px; \r\n    height:200px;\r\n    width:200px;\r\n    border: 1px solid var(--default-color);\r\n    padding: 5px;\r\n    object-fit:cover;\r\n\r\n    animation:circling-shadow-small 4s ease 0s infinite normal;\r\n`;\r\n\r\ntype props = {\r\n    hidePopup: () => void;\r\n}\r\n\r\nexport const SettingsWindow = ({ hidePopup }: props) => {\r\n    const [newColors, setNewColors] = useState(Settings.getValue(\"colors\") || JSON.stringify(colors));\r\n    const [linkGroups, setLinkGroups] = useState(Settings.getValue(\"link-groups\") || JSON.stringify(links, null, 4));\r\n    const [image, setImage] = useState(Settings.getValue(\"image\") || images[0].value);\r\n    const [searchEngine, setSearchEngine] = useState(Settings.getValue(\"search-engine\") || searchEngines[0].value);\r\n\r\n    const setStorageValue = (settingsKey: string, value: any) => {\r\n        Settings.setValue(settingsKey, value);\r\n    }\r\n    const applyValues = () => {\r\n        setStorageValue(\"image\", image);\r\n        setStorageValue(\"search-engine\", searchEngine);\r\n        setStorageValue(\"colors\", newColors);\r\n        setStorageValue(\"link-groups\", linkGroups);\r\n        window.location.reload(false)\r\n    };\r\n\r\n    return (\r\n        <StyledSettingsWindow>\r\n            <CloseButton\r\n                inverted={true}\r\n                onClick={() => hidePopup()}\r\n                icon={faTimes}\r\n            />\r\n            <StyledSettingsContent>\r\n                <SettingElement>\r\n                    <OptionSlider settingsKey={\"search-engine\"} values={searchEngines} onChange={setSearchEngine} />\r\n                </SettingElement>\r\n                <SettingElement>\r\n                    <OptionSlider settingsKey={\"image\"} values={images} onChange={setImage} />\r\n                </SettingElement>\r\n                <SettingElement>\r\n                    <OptionTextInput settingsKey={\"image\"} onChange={setImage} />\r\n                </SettingElement>\r\n                <SettingElement>\r\n                    <ImagePreview src={image} />\r\n                </SettingElement>\r\n                <SettingElement>\r\n                    <ColorPicker newColors={newColors} setNewColors={setNewColors} />\r\n                </SettingElement>\r\n                <SettingElement>\r\n                    <SettingsButton\r\n                        onClick={() => applyValues()}\r\n                        text={\"Apply\"}\r\n                        icon={faSyncAlt}\r\n                    />\r\n                    <SettingsButton\r\n                        onClick={() => {\r\n                            localStorage.clear();\r\n                            window.location.reload(false);\r\n                        }}\r\n                        text={\"Reset\"}\r\n                        icon={faTrash}\r\n                    />\r\n                </SettingElement>\r\n            </StyledSettingsContent>\r\n            <OptionTextArea settingsKey={\"link-groups\"} onChange={setLinkGroups} initialValue={linkGroups} />\r\n        </StyledSettingsWindow >\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport styled from '@emotion/styled';\r\nimport { SettingsWindow } from \"./SettingsWindow/SettingsWindow\";\r\n\r\nconst SettingsPopupToggle = styled.button`\r\n\tposition: fixed;\r\n\ttop: 20px;\r\n\tright:20px;\r\n\tfont-size: 20px;\r\n\r\n\tcolor: var(--default-color);\r\n    background-color:transparent;\r\n    border:none;\r\n\topacity: 0.3;\r\n\r\n\tcursor: pointer;\r\n\ttransition: .3s;\r\n\r\n    :hover{\r\n        opacity: .5;\r\n        color: var(--accent-color2);\r\n        animation:box-flicker 0.01s ease 0s infinite alternate;\r\n    }\r\n    :focus{\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst PopupCover = styled.div`\r\n    position: fixed;\r\n\tleft:0px;\r\n    width:100%;\r\n    height:100%;\r\n    background-color: var(--bg-color);\r\n    opacity: 0.7;\r\n`;\r\n\r\nconst SettingsWrapper = styled.div`\r\n    position: absolute;\r\n\ttop:0px;\r\n    left:0px;\r\n    right:0px;\r\n    bottom:0px;\r\n    padding:100px;\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:center;\r\n    align-items:center;\r\n`;\r\n\r\nexport const Settings = () => {\r\n    const [showSettings, setShowSettings] = useState(false)\r\n\r\n    const hidePopup = () => setShowSettings(false);\r\n\r\n    return (\r\n        <>\r\n            <SettingsPopupToggle onClick={() => setShowSettings(true)}>\r\n                <FontAwesomeIcon icon={faSlidersH} />\r\n            </SettingsPopupToggle>\r\n            {showSettings && (\r\n                <SettingsWrapper>\r\n                    <PopupCover onClick={() => hidePopup()} />\r\n                    <SettingsWindow hidePopup={hidePopup} />\r\n                </SettingsWrapper>\r\n            )}\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport styled from \"@emotion/styled\";\r\nimport * as settingsHandler from \"./Settings/settingsHandler\";\r\n\r\nimport { LinkContainer } from \"./LinkContainer/LinkContainer\"\r\nimport { Searchbar } from \"./Searchbar/Searchbar\";\r\nimport { Settings } from \"./Settings/Settings\";\r\n\r\nimport { images } from \"../data/data\"\r\n\r\nconst StyledStartpage = styled.div`\r\n    padding:0px 100px;\r\n    display:flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    align-items:center;\r\n    height:calc(100% - 100px);\r\n`;\r\n\r\nconst Image = styled.img`\r\n    height:400px;\r\n    width:400px;\r\n    border: 2px solid var(--default-color);\r\n    padding: 10px;\r\n    object-fit:cover;\r\n\r\n    animation:circling-shadow 4s ease 0s infinite normal;\r\n`;\r\n\r\nexport const Startpage = () => {\r\n    const [img, setImg] = useState(settingsHandler.getValue(\"image\") || images[0].value);\r\n\r\n    return (\r\n        <>\r\n            <StyledStartpage>\r\n                <div>\r\n                    <Image src={img} onError={() => setImg(images[0].value)} />\r\n                </div>\r\n                <LinkContainer />\r\n            </StyledStartpage>\r\n            <Searchbar />\r\n            <Settings />\r\n        </>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport './base/variables.css';\r\n\r\nimport { Startpage } from \"./Startpage/Startpage\"\r\nimport * as Settings from \"./Startpage/Settings/settingsHandler\"\r\n\r\nconst App = () => {\r\n\r\n\t//Apply colors\r\n\tconst colorSettings = Settings.getValue(\"colors\");\r\n\tif (colorSettings) {\r\n\t\tvar root = document.documentElement;\r\n\t\tconst parsedColorSettings = JSON.parse(colorSettings);\r\n\t\tObject.keys(parsedColorSettings).forEach(key => {\r\n\t\t\troot.style.setProperty(key, parsedColorSettings[key]);\r\n\t\t});\r\n\t}\r\n\r\n\treturn <Startpage />;\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './base/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/pic_1.03400a86.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic_2.42b93d95.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic_3.8796fde5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic_4.66ccb182.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic_5.6e9543cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic_6.65b20253.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic_7.6516acf6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic_8.ba1342f4.png\";","module.exports = __webpack_public_path__ + \"static/media/google.9ef22081.svg\";","module.exports = __webpack_public_path__ + \"static/media/duckduckgo.e5067b7c.svg\";","module.exports = __webpack_public_path__ + \"static/media/qwant.f90c346a.svg\";"],"sourceRoot":""}