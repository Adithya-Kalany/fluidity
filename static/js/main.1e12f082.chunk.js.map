{"version":3,"sources":["Startpage/Settings/settingsHandler.ts","Startpage/LinkContainer/Accordion/Accordion.tsx","data/data.ts","Startpage/LinkContainer/LinkContainer.tsx","Startpage/Searchbar/Searchbar.tsx","Startpage/Settings/SettingsWindow/IconButton.tsx","Startpage/Settings/SettingsWindow/LinkSettings/OptionTextArea.tsx","Startpage/Settings/SettingsWindow/LinkSettings/LinkSettings.tsx","Startpage/Settings/SettingsWindow/OptionSlider.tsx","Startpage/Settings/SettingsWindow/SearchSettings/SearchSettings.tsx","Startpage/Settings/SettingsWindow/OptionTextInput.tsx","Startpage/Settings/SettingsWindow/DesignSettings/ColorPicker.tsx","Startpage/Settings/SettingsWindow/DesignSettings/DesignSettings.tsx","data/changelog.ts","Startpage/Settings/SettingsWindow/Changelog/Changelog.tsx","Startpage/Settings/SettingsWindow/SettingsWindow.tsx","Startpage/Settings/Settings.tsx","Startpage/Startpage.tsx","App.tsx","serviceWorker.js","index.js","data/pictures/pic_1.jpg","data/pictures/pic_2.jpg","data/pictures/pic_3.jpg","data/pictures/pic_4.jpg","data/pictures/pic_5.jpg","data/pictures/pic_6.jpg","data/pictures/pic_7.jpg","data/pictures/pic_8.png","data/pictures/google.svg","data/pictures/duckduckgo.svg","data/pictures/qwant.svg","data/pictures/logo.png"],"names":["Search","get","lsSearch","localStorage","getItem","parse","set","searchSettings","setItem","JSON","stringify","Links","lsLinks","themes","linkGroups","Design","lsDesign","Themes","design","setThemes","lsThemes","add","theme","remove","name","filter","StyledAccordionContainer","styled","div","AccordionContainer","props","children","StyledAccordionGroup","AccordionContent","width","AccordionTitleWrapper","button","active","AccordionTitle","h1","AccordionGroup","parent","title","onClick","useState","contentWidth","setContentWidth","useEffect","clientWidth","length","ref","elem","parentElement","tabIndex","undefined","className","aria-hidden","links","label","value","images","pic_1","pic_2","pic_3","pic_4","pic_5","pic_6","pic_7","pic_8","searchEngines","engine","fastForward","image","colors","LinkItem","a","LinkContainer","setActive","Settings","console","error","log","map","group","groupIndex","key","link","linkIndex","href","StyledSearchbarContainer","StyledSearchbar","input","SearchIcon","src","Searchbar","searchSymbol","duckduckgo","startsWith","google","qwant","placeholder","type","onKeyUp","e","which","query","currentTarget","window","location","autoFocus","StyledIconButton","inverted","IconButton","icon","text","StyledOptionTextArea","StyledTextArea","textarea","OptionTextArea","initialValue","onChange","setError","parsedData","tryOnChangeEvent","defaultValue","GeneralSettingsContent","LinkSettings","setLinkGroups","SettingsLabel","SliderWrapper","OptionSlider","values","currentValue","index","setIndex","forEach","val","i","handleChange","newIndex","disabled","faAngleLeft","faAngleRight","SearchSettingsContent","SearchSettings","setSearchSettings","currentEngine","SettingElement","StyledOptionTextInput","StyledInput","OptionTextInput","setValue","faCheck","ColorPickerContainer","ColorOption","StyledMaterialPicker","ColorPicker","setColors","Object","keys","defaultThemes","currentColor","setCurrentColor","color","result","tmp","hex","DesignPreview","ImagePreview","img","StyledAccordionPreview","AccordionPreviewTitle","h2","AccordionPreviewContainer","AccordionPreview","DesignSettings","setDesign","StyledSettingsContent","SettingsButton","faPlus","faMinus","changelog","version","changes","description","ChangelogWrapper","StyledVersion","Changelog","logo","alt","Version","change","StyledSettingsWindow","WindowContent","WindowHeader","WindowFooter","p","CloseButton","Tabbar","TabOption","TabOptions","SettingsWindow","hidePopup","currentTab","setCurrentTab","defaultSearchSettings","lsSearchSettings","lsLinkGroups","option","faTimes","reload","faSave","faFire","clear","faTrash","SettingsPopupToggle","PopupCover","SettingsWrapper","showSettings","setShowSettings","faSlidersH","StyledStartpage","Image","Startpage","setImg","onError","App","root","document","documentElement","style","setProperty","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.1e12f082.chunk.js","sourcesContent":["import { linkGroup, Theme, Search as SearchType } from \"../../data/data\";\r\n\r\nexport const Search = {\r\n    get: () => {\r\n        const lsSearch = localStorage.getItem(\"search-settings\");\r\n        if (!!lsSearch)\r\n            return Search.parse(lsSearch);\r\n        return undefined;\r\n    },\r\n\r\n    set: (searchSettings: SearchType) =>\r\n        localStorage.setItem(\"search-settings\", JSON.stringify(searchSettings)),\r\n\r\n    parse: (searchSettings: string) =>\r\n        JSON.parse(searchSettings) as SearchType,\r\n};\r\n\r\nexport const Links = {\r\n    get: () => {\r\n        const lsLinks = localStorage.getItem(\"link-groups\");\r\n        if (!!lsLinks)\r\n            return Links.parse(lsLinks);\r\n        return undefined;\r\n    },\r\n\r\n    set: (themes: linkGroup[]) =>\r\n        localStorage.setItem(\"link-groups\", JSON.stringify(themes)),\r\n\r\n    parse: (linkGroups: string) =>\r\n        JSON.parse(linkGroups) as linkGroup[],\r\n};\r\n\r\nexport const Design = {\r\n    get: () => {\r\n        const lsDesign = localStorage.getItem(\"design\");\r\n        if (!!lsDesign)\r\n            return Themes.parse(lsDesign);\r\n        return undefined;\r\n    },\r\n\r\n    set: (design: Theme) =>\r\n        localStorage.setItem(\"design\", JSON.stringify(design)),\r\n};\r\n\r\n\r\nconst setThemes = (themes: Theme[]) =>\r\n    localStorage.setItem(\"themes\", JSON.stringify(themes));\r\n\r\nexport const Themes = {\r\n    get: () => {\r\n        const lsThemes = localStorage.getItem(\"themes\");\r\n        if (!!lsThemes)\r\n            return JSON.parse(lsThemes) as Theme[];\r\n        return undefined;\r\n    },\r\n\r\n\r\n    add: (theme: Theme) => {\r\n        const lsThemes = Themes.get();\r\n        if (lsThemes)\r\n            setThemes([...lsThemes, theme])\r\n        setThemes([theme])\r\n    },\r\n\r\n    remove: (name: string) => {\r\n        const lsThemes = Themes.get();\r\n        if (lsThemes)\r\n            setThemes(lsThemes.filter((theme) => theme.name !== name));\r\n    },\r\n\r\n    parse: (theme: string) =>\r\n        JSON.parse(theme) as Theme,\r\n};\r\n","import React, { PropsWithChildren, useEffect, useState } from 'react';\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst StyledAccordionContainer = styled.div`\r\n    margin-left: 100px;\r\n    display:flex;\r\n    width:calc(100% - 400px - 100px);\r\n\r\n    @media only screen and (max-width: 1730px) {\r\n`;\r\n\r\nexport const AccordionContainer = (props: PropsWithChildren<{}>) => {\r\n    return <StyledAccordionContainer>\r\n        {props.children}\r\n    </StyledAccordionContainer>\r\n}\r\n\r\nconst StyledAccordionGroup = styled.div`\r\n    height: 400px;\r\n    display: flex;\r\n    padding: 0 10px;\r\n    flex-direction: row;\r\n    border-right:3px solid var(--default-color);\r\n    :first-of-type{\r\n        border-left:3px solid var(--default-color);\r\n    }\r\n`;\r\n\r\nconst AccordionContent = styled.div< { width: number }>`\r\n    height: 100%;\r\n    width: ${({ width }) => width + \"px\"};\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    overflow: hidden;\r\n    transition:.3s;\r\n`;\r\n\r\nconst AccordionTitleWrapper = styled.button< { active: boolean }>`\r\n    padding: 0;\r\n    background-color: var(--bg-color);\r\n    border: 4px solid var(--accent-color);\r\n    height: 100%;\r\n    width: 90px;\r\n    cursor: ${({ active }) =>\r\n        active ? \"default\" : \"pointer\"\r\n    };\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    opacity: 0.8;\r\n    position: relative;\r\n    ::before {\r\n        content: \"\";\r\n        position: absolute;\r\n        bottom: 0px;\r\n        width: 100%;\r\n        height: ${({ active }) => active ? \"390px\" : \"0\"};\r\n        background-color: var(--accent-color);\r\n        transition:  ${({ active }) => active ? \"1s\" : \".5s\"};\r\n    }\r\n    :hover, :focus{\r\n        outline: none;\r\n        ${({ active }) => !active && `\r\n            ::before {\r\n                height: 50%;\r\n            }\r\n            > .wave {\r\n                top: 180px;\r\n                ::before{\r\n                    animation: wave 12s infinite cubic-bezier(0.71, 0.33, 0.33, 0.68);\r\n                    top: -25%;\r\n                    left: 50%;\r\n                }\r\n            }\r\n        `}\r\n    }\r\n\r\n    > .wave {\r\n        /* Waves Source: https://codepen.io/mburakerman/pen/eRZZEv */\r\n        width: 82px;\r\n        height: 50px;\r\n        position: absolute;\r\n        top: ${({ active }) => active ? \"0px\" : \"350px\"};\r\n        overflow: hidden;\r\n        transition:  ${({ active }) => active ? \"1s\" : \".5s\"};\r\n        ::before{\r\n            content:\"\";\r\n            width: 180px;\r\n            height: 185px;\r\n            position: absolute;\r\n            top: -25%;\r\n            left: 50%;\r\n            margin-left: -90px;\r\n            margin-top: -140px;\r\n            border-radius: 37%;\r\n            background-color: var(--bg-color);\r\n            animation: wave 12s infinite cubic-bezier(0.71, 0.33, 0.33, 0.68);\r\n        }\r\n        @keyframes wave {\r\n            from { transform: rotate(0deg);}\r\n            from { transform: rotate(360deg);}\r\n        }\r\n    }\r\n\r\n\r\n    ${({ active }) =>\r\n        !active && `\r\n        :hover{\r\n            > * {\r\n                color: var(--bg-color);\r\n                text-shadow:\r\n                    5px 0px 0 var(--accent-color),\r\n                    4px 0px 0 var(--accent-color),\r\n                    3px 0px 0 var(--accent-color),\r\n                    2px 0px 0 var(--accent-color),\r\n                    1px 0px 0 var(--accent-color),\r\n                    -1px 0px 0 var(--accent-color),\r\n                    0px 1px 0 var(--accent-color),\r\n                    0px -1px 0 var(--accent-color);\r\n            }\r\n        }\r\n    `\r\n    };\r\n`;\r\n\r\nconst AccordionTitle = styled.h1< { title: string, active: boolean }>`\r\n    transform: rotate(90deg);\r\n    min-width: max-content;\r\n    color: ${({ active }) => active ? \"var(--bg-color)\" : \"var(--default-color)\"};\r\n    transition: .5s;\r\n    letter-spacing: 5px;\r\n`;\r\n\r\ntype groupProps = PropsWithChildren<{\r\n    active: boolean,\r\n    title: string,\r\n    onClick: () => void,\r\n}>\r\n\r\nexport const AccordionGroup = ({ active, title, children, onClick }: groupProps) => {\r\n    const [contentWidth, setContentWidth] = useState(active ? 500 : 0);\r\n    let parent: HTMLElement;\r\n    useEffect(() => {\r\n        if (parent && active) {\r\n            setContentWidth(\r\n                parent.clientWidth - (parent.children.length * 113) - 3\r\n            );\r\n        } else {\r\n            setContentWidth(0);\r\n        }\r\n    }, [active])\r\n\r\n    return <StyledAccordionGroup ref={elem => parent = elem?.parentElement as HTMLElement}>\r\n        <AccordionTitleWrapper active={active} onClick={onClick} tabIndex={active ? -1 : undefined}>\r\n            <div className={\"wave\"} />\r\n            <AccordionTitle active={active} title={title}>\r\n                {title}\r\n            </AccordionTitle>\r\n        </AccordionTitleWrapper>\r\n        <AccordionContent width={contentWidth} aria-hidden={!active || undefined}>\r\n            {children}\r\n        </AccordionContent>\r\n    </StyledAccordionGroup>\r\n}\r\n","import pic_1 from \"./pictures/pic_1.jpg\";\r\nimport pic_2 from \"./pictures/pic_2.jpg\";\r\nimport pic_3 from \"./pictures/pic_3.jpg\";\r\nimport pic_4 from \"./pictures/pic_4.jpg\";\r\nimport pic_5 from \"./pictures/pic_5.jpg\";\r\nimport pic_6 from \"./pictures/pic_6.jpg\";\r\nimport pic_7 from \"./pictures/pic_7.jpg\";\r\nimport pic_8 from \"./pictures/pic_8.png\";\r\n\r\nexport type dataElem = {\r\n\tlabel: string,\r\n\tvalue: string,\r\n}\r\n\r\nexport type linkGroup = {\r\n\ttitle: string;\r\n\tlinks: dataElem[];\r\n}\r\n\r\n/*\r\n──────▄▌▐▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀​▀▀▀▀▀▀▌\r\n───▄▄██▌█ BEEP BEEP\r\n▄▄▄▌▐██▌█ GAY PORN DELIVERY\r\n███████▌█▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄​▄▄▄▄▄▄▌\r\n▀(@)▀▀▀▀▀▀▀(@)(@)▀▀▀▀▀▀▀▀▀▀▀▀▀​▀▀▀▀(@)▀\r\n*/\r\nexport const links: linkGroup[] = [\r\n\t{\r\n\t\ttitle: \"Reddit\",\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"r/startpages\",\r\n\t\t\t\tvalue: \"https://www.reddit.com/r/startpages/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"r/unixporn\",\r\n\t\t\t\tvalue: \"https://www.reddit.com/r/unixporn/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"r/rainmeter\",\r\n\t\t\t\tvalue: \"https://www.reddit.com/r/rainmeter/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"r/AnimalsBeingDerps\",\r\n\t\t\t\tvalue: \"https://www.reddit.com/r/AnimalsBeingDerps/\",\r\n\t\t\t},\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\ttitle: \"3D Modelling\",\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Blender\",\r\n\t\t\t\tvalue: \"https://www.blender.org/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"BlenderGuru\",\r\n\t\t\t\tvalue: \"https://www.blenderguru.com/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Poliigon\",\r\n\t\t\t\tvalue: \"https://www.poliigon.com/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Blender tutorial\",\r\n\t\t\t\tvalue: \"https://www.youtube.com/watch?v=NyJWoyVx_XI&list=PLjEaoINr3zgEq0u2MzVgAaHEBt--xLB6U\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"The other Blender tutorial\",\r\n\t\t\t\tvalue: \"https://www.youtube.com/watch?v=bpvh-9H8S1g&list=PL8eKBkZzqDiU-qcoaghCz04sMitC1yx6k&index=1\",\r\n\t\t\t},\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\ttitle: \"Design\",\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"PixlrX\",\r\n\t\t\t\tvalue: \"https://pixlr.com/x/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"AI Image Enlarger\",\r\n\t\t\t\tvalue: \"https://bigjpg.com/en\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Img to Svg Converter\",\r\n\t\t\t\tvalue: \"https://picsvg.com/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Affinity\",\r\n\t\t\t\tvalue: \"https://affinity.serif.com/en-us/tutorials/designer/desktop/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Affinity - YT\",\r\n\t\t\t\tvalue: \"https://www.youtube.com/c/AffinityRevolution/playlists\",\r\n\t\t\t},\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\ttitle: \"Music\",\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"i wanna be a cowboy\",\r\n\t\t\t\tvalue: \"https://www.youtube.com/watch?v=8zWz92f_HGs\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"let the bodies hit the floor\",\r\n\t\t\t\tvalue: \"https://www.youtube.com/watch?v=b--VKaCB9u0\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Nobody Kanna Cross It\",\r\n\t\t\t\tvalue: \"https://www.youtube.com/watch?v=2wqTnwJGvtc\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Smug Dancin\",\r\n\t\t\t\tvalue: \"https://www.youtube.com/watch?v=eNZ9Od1jQ4Q\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Utamaru - The Sanctified Mind Cover\",\r\n\t\t\t\tvalue: \"https://www.youtube.com/watch?v=MHlJKLlS07U\",\r\n\t\t\t},\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\ttitle: \"Sauce\",\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"JS Library - React\",\r\n\t\t\t\tvalue: \"https://reactjs.org/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"CSS Writing Library - EmotionJS\",\r\n\t\t\t\tvalue: \"https://emotion.sh/docs/introduction\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Pictures - DeathAndMilk\",\r\n\t\t\t\tvalue: \"https://www.instagram.com/deathandmilk_/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Icons - FontAwesome\",\r\n\t\t\t\tvalue: \"https://fontawesome.com/icons\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Text Flicker - CodeMyUI\",\r\n\t\t\t\tvalue: \"https://codemyui.com/crt-screen-text-flicker-animation-in-pure-css/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Wave Animation - mburakerman\",\r\n\t\t\t\tvalue: \"https://codepen.io/mburakerman/pen/eRZZEv\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"About me t(ಠ益ಠt)\",\r\n\t\t\t\tvalue: \"/\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Da real sauce ԅ(♡﹃♡ԅ)\",\r\n\t\t\t\tvalue: \"https://www.youtube.com/watch?v=qr89xoZyE1g\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Even more real sauce ( ͡° ͜ʖ ͡°)\",\r\n\t\t\t\tvalue: \"https://www.youtube.com/watch?v=VLhJOd_TFiI\",\r\n\t\t\t},\r\n\t\t]\r\n\t},\r\n]\r\n\r\nexport const images: dataElem[] = [\r\n\t{ label: \"pic_1\", value: pic_1 },\r\n\t{ label: \"pic_2\", value: pic_2 },\r\n\t{ label: \"pic_3\", value: pic_3 },\r\n\t{ label: \"pic_4\", value: pic_4 },\r\n\t{ label: \"pic_5\", value: pic_5 },\r\n\t{ label: \"pic_6\", value: pic_6 },\r\n\t{ label: \"pic_7\", value: pic_7 },\r\n\t{ label: \"pic_8\", value: pic_8 },\r\n];\r\n\r\nexport const searchEngines: dataElem[] = [\r\n\t{\r\n\t\tlabel: \"DuckDuckGo\",\r\n\t\tvalue: \"duckduckgo.com/\",\r\n\t},\r\n\t{\r\n\t\tlabel: \"Google\",\r\n\t\tvalue: \"google.com/search\",\r\n\t},\r\n\t{\r\n\t\tlabel: \"Qwant\",\r\n\t\tvalue: \"qwant.com/\",\r\n\t},\r\n];\r\n\r\nexport type Search = {\r\n\tengine: string,\r\n\tfastForward: {\r\n\t\t[key: string]: string,\r\n\t},\r\n}\r\n\r\nexport const searchSettings: Search = {\r\n\tengine: searchEngines[0].value,\r\n\tfastForward: {\r\n\t\t\"deepl\": \"https://deepl.com/\",\r\n\t\t\"maps\": \"https://google.de/maps/\",\r\n\t}\r\n}\r\n\r\nexport type colorsType = {\r\n\t[key: string]: string\r\n\t\"--bg-color\": string,\r\n\t\"--default-color\": string,\r\n\t\"--accent-color\": string,\r\n\t\"--accent-color2\": string,\r\n}\r\n\r\nexport type Theme = {\r\n\tname: string;\r\n\tcolors: colorsType;\r\n\timage: string;\r\n}\r\n\r\nexport const themes: Theme[] = [\r\n\t{\r\n\t\tname: \"default\",\r\n\t\timage: pic_1,\r\n\t\tcolors: {\r\n\t\t\t\"--bg-color\": \"rgb(46, 46, 46)\",\r\n\t\t\t\"--default-color\": \"rgb(230, 230, 230)\",\r\n\t\t\t\"--accent-color\": \"rgb(255, 180, 230)\",\r\n\t\t\t\"--accent-color2\": \"rgb(180, 255, 230)\",\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tname: \"Pop!OS\",\r\n\t\timage: \"https://oswallpapers.com/wp-content/uploads/2019/04/kate-hazen-unleash-your-robot.jpg\",\r\n\t\tcolors: {\r\n\t\t\t\"--bg-color\": \"#333136\",\r\n\t\t\t\"--default-color\": \"#2BC5EB\",\r\n\t\t\t\"--accent-color\": \"#FCD307\",\r\n\t\t\t\"--accent-color2\": \"#2BC5EB\",\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tname: \"Dark Souls\",\r\n\t\timage: \"https://i.pinimg.com/originals/16/74/db/1674dbae45cd38f3d3b4c00dc8616bd7.gif\",\r\n\t\tcolors: {\r\n\t\t\t\"--bg-color\": \"#32323C\",\r\n\t\t\t\"--default-color\": \"#A0A08C\",\r\n\t\t\t\"--accent-color\": \"#9A6650\",\r\n\t\t\t\"--accent-color2\": \"#461E28\",\r\n\t\t},\r\n\t}\r\n]","import React, { useState } from 'react';\r\nimport styled from \"@emotion/styled\";\r\nimport { AccordionContainer, AccordionGroup } from './Accordion/Accordion';\r\nimport * as Settings from \"../Settings/settingsHandler\";\r\nimport { linkGroup, links } from \"../../data/data\";\r\n\r\nconst LinkItem = styled.a`\r\n    width: fit-content;\r\n    white-space: nowrap;\r\n    position:relative;\r\n    padding: 10px 0 10px 30px;\r\n    font-size:1rem;\r\n\r\n    ::before{\r\n        position:absolute;\r\n        left:0px;\r\n        bottom:5px;\r\n        z-index:0;\r\n        content: \"\";\r\n        height:5px;\r\n        width:100%;\r\n        background-color: var(--accent-color);\r\n        transition:.5s;\r\n        opacity:.7;\r\n    }\r\n\r\n    :hover, :focus {\r\n        color: var(--accent-color2);\r\n        animation:text-flicker 0.01s ease 0s infinite alternate;\r\n        outline: none;\r\n    }\r\n\r\n`;\r\n\r\nexport const LinkContainer = () => {\r\n    const [active, setActive] = useState(0);\r\n    let linkGroups: linkGroup[] = links;\r\n    try {\r\n        const lsLinks = Settings.Links.get();\r\n        if (lsLinks)\r\n            linkGroups = lsLinks;\r\n    }\r\n    catch { console.error(\"Links could not be loaded.\"); }\r\n\r\n    console.log(linkGroups);\r\n\r\n    return <AccordionContainer>\r\n        {linkGroups.map((group, groupIndex) =>\r\n            <AccordionGroup\r\n                key={\"AccordionGroup\" + groupIndex}\r\n                active={active === groupIndex}\r\n                title={group.title} onClick={() => setActive(groupIndex)}\r\n            >\r\n                {group.links.map((link, linkIndex) =>\r\n                    <LinkItem\r\n                        tabIndex={active !== groupIndex ? -1 : undefined}\r\n                        key={\"LinkItem\" + linkIndex}\r\n                        href={link.value}\r\n                    >\r\n                        {link.label}\r\n                    </LinkItem>\r\n                )}\r\n            </AccordionGroup>\r\n        )}\r\n    </AccordionContainer>\r\n}","import React from 'react';\r\nimport styled from \"@emotion/styled\";\r\nimport * as Settings from \"../Settings/settingsHandler\";\r\n\r\nimport google from \"../../data/pictures/google.svg\";\r\nimport duckduckgo from \"../../data/pictures/duckduckgo.svg\";\r\nimport qwant from \"../../data/pictures/qwant.svg\";\r\n\r\nconst StyledSearchbarContainer = styled.div`\r\n    position: fixed;\r\n    left: 100px;\r\n    right: 50px;\r\n    bottom: 40px;\r\n    height:min-content;\r\n    `;\r\nconst StyledSearchbar = styled.input`\r\n    width: 100%;\r\n    font-size: 30pt;\r\n    \r\n    background-color: rgba(0,0,0,0);\r\n    color: var(--default-color);\r\n    transition: .3s;\r\n    border: none;\r\n    border-bottom: 2px solid var(--default-color);\r\n    opacity: 0.3;\r\n    \r\n    ::placeholder {\r\n        color: var(--default-color);\r\n    }\r\n    \r\n    :hover, :focus {\r\n        opacity: 1;\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst SearchIcon = styled.div<{ src: string }>`\r\n    position: fixed;\r\n    left: 35px;\r\n    bottom: 40px;\r\n    height: 2.9rem;\r\n    width: 2.9rem;\r\n\r\n    background: var(--default-color);\r\n    \r\n    -webkit-mask-size: cover;\r\n    mask-size: cover;\r\n    -webkit-mask-image: url(${({ src }) => src});\r\n    mask-image: url(${({ src }) => src});\r\n`;\r\n\r\nexport const Searchbar = () => {\r\n    let engine: string = Settings.Search.get()?.engine || \"duckduckgo.com/\";\r\n\r\n    let searchSymbol = duckduckgo\r\n    if (engine.startsWith(\"google\"))\r\n        searchSymbol = google;\r\n    else if (engine.startsWith(\"qwant\"))\r\n        searchSymbol = qwant;\r\n\r\n    const redirectToSearch = (query: string) => {\r\n        window.location.href = \"https://\" + engine + \"?q=\" + query;\r\n    }\r\n\r\n    return (\r\n        <StyledSearchbarContainer>\r\n            <StyledSearchbar\r\n                placeholder=\"Always stay clean!\"\r\n                type=\"input\"\r\n                onKeyUp={e => e.which === 13 && redirectToSearch(e.currentTarget.value)}\r\n                autoFocus={true}\r\n            />\r\n            <SearchIcon src={searchSymbol} />\r\n        </StyledSearchbarContainer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { FontAwesomeIcon, FontAwesomeIconProps } from '@fortawesome/react-fontawesome'\r\nimport styled from '@emotion/styled';\r\n\r\nconst StyledIconButton = styled.button<{ inverted?: boolean }>`\r\n    color: ${({ inverted }) => (inverted ? \"var(--bg-color)\" : \"var(--default-color)\")};\r\n    background-color: transparent;\r\n    min-width:50px;\r\n\tfont-size: 20px;\r\n    border: none;\r\n\topacity: 0.7;\r\n\tcursor: pointer;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    :enabled:hover{\r\n        ${({ inverted }) => inverted ?\r\n        `filter: \r\n            drop-shadow(2px 2px 0 var(--accent-color))\r\n            drop-shadow(-2px -2px 0 var(--accent-color))\r\n            drop-shadow(-2px 2px 0 var(--accent-color))\r\n            drop-shadow(2px -2px 0 var(--accent-color))`\r\n        : \"animation: box-flicker 0.01s ease 0s infinite alternate\"};\r\n    }\r\n    :focus{\r\n        outline: none;\r\n    }\r\n    :disabled{\r\n        opacity: 0.2;\r\n        cursor: default;\r\n    }\r\n\r\n    > span{\r\n        margin-right:10px;\r\n    }\r\n`;\r\ntype props =\r\n    Pick<FontAwesomeIconProps, \"icon\">\r\n    & React.ButtonHTMLAttributes<HTMLButtonElement>\r\n    & {\r\n        text?: string;\r\n        inverted?: boolean;\r\n    };\r\n\r\n\r\nexport const IconButton = ({\r\n    icon,\r\n    text,\r\n    ...props\r\n}: props) => {\r\n    return <StyledIconButton {...props}>\r\n        {text && <span>{text}</span>}\r\n        <FontAwesomeIcon icon={icon}></FontAwesomeIcon>\r\n    </StyledIconButton>\r\n}","import React, { useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nimport * as Settings from \"../../settingsHandler\";\r\n\r\nimport { linkGroup } from \"../../../../data/data\";\r\n\r\nconst StyledOptionTextArea = styled.div<{ error?: string }>`\r\n    position: relative;\r\n    border: 2px solid var(--default-color);\r\n    display:flex;\r\n    padding: 10px 0 10px 20px;\r\n    height: calc(100% - 40px);\r\n    ${({ error }) => error && `\r\n        ::after{\r\n            content: \"${error}\";\r\n            color: var(--accent-color);\r\n            position: absolute;\r\n            top: 10px;\r\n            right: 15px;\r\n            font-size: 0.8rem;\r\n        }\r\n    `}\r\n`;\r\n\r\nconst StyledTextArea = styled.textarea`\r\n    background-color: var(--bg-color);\r\n    color: var(--default-color);\r\n    border: none;\r\n    height: 100%;\r\n    width: 100%;\r\n    outline: none;\r\n    resize: none;\r\n`;\r\n\r\ntype props = {\r\n    initialValue: linkGroup[],\r\n    onChange: (value: linkGroup[]) => void,\r\n}\r\n\r\nconst placeholder = JSON.stringify(\r\n    [\r\n        {\r\n            title: \"Title\",\r\n            links: [\r\n                {\r\n                    label: \"label\",\r\n                    value: \"url\",\r\n                },\r\n                {\r\n                    label: \"label\",\r\n                    value: \"url\",\r\n                },\r\n                {\r\n                    label: \"label\",\r\n                    value: \"url\",\r\n                },\r\n            ]\r\n        },\r\n    ], null, 4);\r\n\r\nexport const OptionTextArea = ({ initialValue, onChange }: props) => {\r\n    const [error, setError] = useState<string | undefined>(undefined);\r\n\r\n    const tryOnChangeEvent = (linkGroups: string) => {\r\n        try {\r\n            const parsedData = Settings.Links.parse(linkGroups);\r\n            setError(undefined);\r\n            onChange(parsedData);\r\n        } catch { setError(\"Your links are not parseable. Probably you have a Syntax Error?\") }\r\n    }\r\n\r\n    return <StyledOptionTextArea error={error}>\r\n        <StyledTextArea\r\n            onKeyUp={e => tryOnChangeEvent(e.currentTarget.value)}\r\n            placeholder={placeholder}\r\n            defaultValue={JSON.stringify(initialValue, null, 4)}\r\n        />\r\n    </StyledOptionTextArea>\r\n}","import React from 'react';\r\nimport styled from \"@emotion/styled\";\r\n\r\nimport { SettingsLabel } from \"../SettingsWindow\"\r\nimport { linkGroup } from \"../../../../data/data\";\r\nimport { OptionTextArea } from \"./OptionTextArea\";\r\n\r\ntype props = {\r\n    linkGroups: linkGroup[];\r\n    setLinkGroups: (value: linkGroup[]) => void;\r\n}\r\nexport const GeneralSettingsContent = styled.div`\r\n    width: 100%;\r\n`;\r\n\r\nexport const LinkSettings = ({ linkGroups, setLinkGroups }: props) => {\r\n\r\n    return (\r\n        <GeneralSettingsContent>\r\n            <SettingsLabel>Links</SettingsLabel>\r\n            <OptionTextArea onChange={setLinkGroups} initialValue={linkGroups} />\r\n        </GeneralSettingsContent>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { IconButton } from \"./IconButton\";\r\n\r\nconst SliderWrapper = styled.div`\r\n    height: 20px;\r\n    width: 400px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: space-between;\r\n    justify-content: space-between;\r\n    padding:5px 0;\r\n`;\r\n\r\ntype props = {\r\n    values: { label: string, value: string }[],\r\n    onChange: (value: string) => void,\r\n    currentValue: string,\r\n}\r\n\r\nexport const OptionSlider = ({ values, onChange, currentValue }: props) => {\r\n    const [index, setIndex] = useState(0);\r\n    useEffect(() => {\r\n        values.forEach((val, i) => {\r\n            currentValue === val.value && i !== index && setIndex(i)\r\n        })\r\n    }, []);\r\n\r\n    const handleChange = (newIndex: number) => {\r\n        setIndex(newIndex);\r\n        onChange(values[newIndex].value)\r\n    }\r\n\r\n    return (\r\n        <SliderWrapper>\r\n            <IconButton\r\n                disabled={index <= 0}\r\n                onClick={() => { handleChange(index - 1) }}\r\n                icon={faAngleLeft}\r\n            />\r\n\r\n            {values[index].label}\r\n\r\n            <IconButton\r\n                disabled={index >= values.length - 1}\r\n                onClick={() => handleChange(index + 1)}\r\n                icon={faAngleRight}\r\n            />\r\n        </SliderWrapper>\r\n    )\r\n}","import React from 'react';\r\nimport styled from \"@emotion/styled\";\r\n\r\nimport { SettingElement, SettingsLabel } from \"../SettingsWindow\"\r\nimport { OptionSlider } from \"../OptionSlider\"\r\nimport { searchEngines, Search } from \"../../../../data/data\";\r\nimport * as Settings from \"../../settingsHandler\";\r\n\r\ntype props = {\r\n    searchSettings: Search;\r\n    setSearchSettings: (value: Search) => void;\r\n}\r\nexport const SearchSettingsContent = styled.div`\r\n    width: 100%;\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-template-rows: 1fr;\r\n    grid-column-gap: 40px;\r\n`;\r\n\r\nexport const SearchSettings = ({ searchSettings, setSearchSettings }: props) => {\r\n    let currentEngine = Settings.Search.get()?.engine || searchEngines[0].value;\r\n\r\n    return (\r\n        <SearchSettingsContent>\r\n            <div>\r\n                <SettingsLabel>Searchbar</SettingsLabel>\r\n                <SettingElement>\r\n                    <OptionSlider\r\n                        currentValue={currentEngine}\r\n                        values={searchEngines}\r\n                        onChange={(engine) => setSearchSettings({ ...searchSettings, engine: engine })}\r\n                    />\r\n                </SettingElement>\r\n                <br />\r\n                <SettingsLabel>More settings comming soon</SettingsLabel>\r\n            </div>\r\n        </SearchSettingsContent>\r\n    )\r\n}","import React, { useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { IconButton } from \"./IconButton\";\r\n\r\nconst StyledOptionTextInput = styled.div`\r\n    background-color: var(--bg-color);\r\n    border: 2px solid var(--default-color);\r\n    display:flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 10px 0 10px 20px;\r\n    width:376px;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n    background-color: var(--bg-color);\r\n    color: var(--default-color);\r\n    border: none;\r\n    height:100%;\r\n    outline:none;\r\n    width: calc(100% - 82px);\r\n`;\r\n\r\ntype props = {\r\n    currentValue: string,\r\n    onChange: (value: string) => void,\r\n}\r\n\r\nexport const OptionTextInput = ({ currentValue, onChange }: props) => {\r\n    const [value, setValue] = useState(currentValue);\r\n\r\n    return <StyledOptionTextInput>\r\n        <StyledInput\r\n            type={\"text\"}\r\n            onKeyUp={e => e.which === 13\r\n                ? onChange(value)\r\n                : setValue(e.currentTarget.value)\r\n            }\r\n            placeholder={\"Picture URL\"}\r\n            defaultValue={value}\r\n        />\r\n        <IconButton icon={faCheck} onClick={(e) => onChange(value)} />\r\n    </StyledOptionTextInput>\r\n}","import React, { useState } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { MaterialPicker, ColorResult } from \"react-color\";\r\n\r\nimport { themes as defaultThemes, colorsType } from \"../../../../data/data\";\r\n\r\n\r\nconst ColorPickerContainer = styled.div`\r\n    height: 200px;\r\n    display: flex;\r\n    > div {\r\n        padding: 0 10px;\r\n        width: 180px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\nconst ColorOption = styled.div<{ active: boolean }>`\r\n    width: 100%;\r\n    padding: 5px 0;\r\n    cursor: pointer;\r\n    opacity: ${({ active }) => !active && \"0.7\"};\r\n    color: ${({ active }) => active && \"var(--accent-color)\"};\r\n    :hover {\r\n        color: var(--accent-color2);\r\n        animation:text-flicker 0.01s ease 0s infinite alternate;\r\n    }\r\n`;\r\n\r\nconst StyledMaterialPicker = styled.div`\r\n    > div * {\r\n        background-color: var(--bg-color)!important;\r\n        color: var(--default-color)!important;\r\n        box-shadow: none;\r\n    }\r\n    > div{\r\n        border: 2px solid var(--default-color);\r\n    }\r\n`;\r\ntype props = {\r\n    colors: colorsType,\r\n    setColors: (value: colorsType) => void\r\n}\r\n\r\nexport const ColorPicker = ({ colors, setColors }: props) => {\r\n    const [currentColor, setCurrentColor] = useState(Object.keys(defaultThemes[0].colors)[0]);\r\n\r\n    const handleChange = (result: ColorResult) => {\r\n        let tmp = { ...colors };\r\n        tmp[currentColor] = result.hex;\r\n        setColors(tmp);\r\n    }\r\n\r\n    return (\r\n        <ColorPickerContainer>\r\n            <div>\r\n                {Object.keys(colors).map((key) =>\r\n                    <ColorOption\r\n                        key={key}\r\n                        active={key === currentColor}\r\n                        onClick={() => setCurrentColor(key)}\r\n                    >\r\n                        {key}\r\n                    </ColorOption>\r\n                )}\r\n            </div>\r\n            <StyledMaterialPicker>\r\n                <MaterialPicker\r\n                    color={colors[currentColor]}\r\n                    onChange={(color) => color && handleChange(color)}\r\n                />\r\n            </StyledMaterialPicker>\r\n        </ColorPickerContainer>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { StyledSettingsContent, SettingElement, SettingsButton, SettingsLabel } from \"../SettingsWindow\"\r\nimport { OptionSlider } from \"../OptionSlider\"\r\nimport { OptionTextInput } from \"../OptionTextInput\";\r\nimport { ColorPicker } from \"./ColorPicker\"\r\nimport { Theme } from '../../../../data/data';\r\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { images } from \"../../../../data/data\";\r\n\r\nconst DesignPreview = styled.div<{ color: string }>`\r\n    background-color:${({ color }) => color};\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    align-items:center;\r\n    border: 2px solid var(--accent-color);\r\n    width: calc(100% - 400px);\r\n    height: 100%;\r\n    position: relative;\r\n    ::before{\r\n        content: \"Design Preview\";\r\n        color: var(--accent-color);\r\n        position: absolute;\r\n        top: 10px;\r\n        right: 15px;\r\n        font-size: 0.8rem;\r\n    }\r\n`;\r\nconst ImagePreview = styled.img`\r\n    margin: 10px; \r\n    height: 300px;\r\n    width: 300px;\r\n    border: 1px solid var(--default-color);\r\n    padding: 5px;\r\n    object-fit:cover;\r\n\r\n    animation:circling-shadow-small 4s ease 0s infinite normal;\r\n`;\r\nconst StyledAccordionPreview = styled.div< { color: string }>`\r\n    border: 4px solid ${({ color }) => color};\r\n    height: 300px;\r\n    width: 80px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: relative;\r\n    ::before {\r\n        content: \"\";\r\n        position: absolute;\r\n        bottom: 0px;\r\n        width: 100%;\r\n        height: 100%;\r\n        background-color: ${({ color }) => color};\r\n    }\r\n\r\n   > .wave {\r\n        width: 80px;\r\n        height: 50px;\r\n        position: absolute;\r\n        top: 0px;\r\n        overflow: hidden;\r\n        ::before{\r\n            content:\"\";\r\n            width: 180px;\r\n            height: 185px;\r\n            position: absolute;\r\n            top: -25%;\r\n            left: 50%;\r\n            margin-left: -90px;\r\n            margin-top: -140px;\r\n            border-radius: 37%;\r\n            background: var(--bg-color);\r\n            animation: wave 12s infinite cubic-bezier(0.71, 0.33, 0.33, 0.68);\r\n        }\r\n        @keyframes wave {\r\n            from { transform: rotate(0deg);}\r\n            from { transform: rotate(360deg);}\r\n        }\r\n    }\r\n`;\r\nconst AccordionPreviewTitle = styled.h2`\r\n    transform: rotate(90deg);\r\n    min-width: max-content;\r\n    color: var(--bg-color);\r\n    transition: .5s;\r\n    letter-spacing: 5px;\r\n`;\r\nconst AccordionPreviewContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items:center;\r\n    margin: 10px;\r\n    > * {\r\n        margin-left: 30px;\r\n    }\r\n`;\r\n\r\n\r\nconst AccordionPreview = ({ title, color }: { title: string, color: string }) => {\r\n    return <StyledAccordionPreview color={color}>\r\n        <div className={\"wave\"} />\r\n        <AccordionPreviewTitle>\r\n            {title}\r\n        </AccordionPreviewTitle>\r\n    </StyledAccordionPreview>\r\n}\r\n\r\ntype props = {\r\n    design: Theme;\r\n    setDesign: (design: Theme) => void;\r\n}\r\n\r\nexport const DesignSettings = ({ design, setDesign }: props) => {\r\n    return (\r\n        <>\r\n            <StyledSettingsContent>\r\n                <SettingsLabel>Theme</SettingsLabel>\r\n                <SettingElement>\r\n                    <OptionSlider\r\n                        currentValue={\"\"}\r\n                        values={[{ label: \"Upcoming Feature\", value: \"\" }]}\r\n                        onChange={() => { }}\r\n                    />\r\n                </SettingElement>\r\n                <SettingElement>\r\n                    <OptionSlider\r\n                        currentValue={design.image}\r\n                        values={images}\r\n                        onChange={(image) => setDesign({ ...design, image: image })}\r\n                    />\r\n                </SettingElement>\r\n                <SettingElement>\r\n                    <OptionTextInput\r\n                        currentValue={design.image}\r\n                        onChange={(image) => setDesign({ ...design, image: image })}\r\n                    />\r\n                </SettingElement>\r\n                <SettingElement>\r\n                    <ColorPicker\r\n                        colors={design.colors}\r\n                        setColors={(colors) => setDesign({ ...design, colors: colors })}\r\n                    />\r\n                </SettingElement>\r\n                <SettingElement>\r\n                    <SettingsButton\r\n                        onClick={() => { }}\r\n                        text={\"Add Theme\"}\r\n                        icon={faPlus}\r\n                        disabled\r\n                    />\r\n                    <SettingsButton\r\n                        onClick={() => { }}\r\n                        text={\"Remove Theme\"}\r\n                        icon={faMinus}\r\n                        disabled\r\n                    />\r\n                </SettingElement>\r\n            </StyledSettingsContent>\r\n\r\n            <DesignPreview color={design.colors[\"--bg-color\"]} >\r\n                <ImagePreview src={design.image} />\r\n                <AccordionPreviewContainer>\r\n                    <AccordionPreview title={\"Default\"} color={design.colors[\"--default-color\"]} />\r\n                    <AccordionPreview title={\"Accent\"} color={design.colors[\"--accent-color\"]} />\r\n                    <AccordionPreview title={\"Accent 2\"} color={design.colors[\"--accent-color2\"]} />\r\n                </AccordionPreviewContainer>\r\n            </DesignPreview>\r\n        </>\r\n    )\r\n}","export type ChangelogVersion = {\r\n    version: string,\r\n    description?: string,\r\n    changes?: string[]\r\n};\r\n\r\nexport const changelog: ChangelogVersion[] = [\r\n    {\r\n        version: \"0.2.1\",\r\n        changes: [\r\n            \"Optimized keyboard control\",\r\n            \"Restructured settings\",\r\n        ]\r\n    },\r\n    {\r\n        version: \"0.2.0\",\r\n        changes: [\r\n            \"Added this changelog\",\r\n            \"Added tabs in settings\",\r\n            \"Added design preview\",\r\n            'Added \"Discard Changes\" button in settings',\r\n            \"Added project logo\",\r\n            \"Changed structure of settings\",\r\n            \"I think I enhanced stability overall a bit\"\r\n        ]\r\n    },\r\n    {\r\n        version: \"0.1.0\",\r\n        description: \"The initial state of this project.\"\r\n    }\r\n];","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { changelog, ChangelogVersion } from \"../../../../data/changelog\"\r\nimport logo from \"../../../../data/pictures/logo.png\"\r\n\r\nconst ChangelogWrapper = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    overflow-y: auto;\r\n    > h1 {\r\n        font-weight: 500;\r\n    }\r\n    > img {\r\n        width: 180px;\r\n        height: 180px;\r\n    }\r\n`;\r\nconst StyledVersion = styled.div`\r\n    width:600px;\r\n`;\r\n\r\nexport const Changelog = () => {\r\n    return (\r\n        <ChangelogWrapper>\r\n            <img src={logo} alt=\"logo\" />\r\n            <h1>Changelog</h1>\r\n            { changelog.map((version: ChangelogVersion) => <Version {...version} />)}\r\n        </ChangelogWrapper>)\r\n}\r\n\r\nconst Version = ({ version, description, changes }: ChangelogVersion) => {\r\n    return <StyledVersion>\r\n        <h2>v{version}</h2>\r\n        {description && <p>{description}</p>}\r\n        {changes?.map((change) => <li>{change}</li>)}\r\n    </StyledVersion>\r\n}","import React, { useEffect, useState } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { faTimes, faTrash, faSave, faFire } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport * as Settings from \"../settingsHandler\";\r\nimport { links, themes, searchSettings as defaultSearchSettings } from \"../../../data/data\";\r\nimport { IconButton } from \"./IconButton\";\r\n\r\nimport { LinkSettings } from \"./LinkSettings/LinkSettings\";\r\nimport { SearchSettings } from \"./SearchSettings/SearchSettings\";\r\nimport { DesignSettings } from \"./DesignSettings/DesignSettings\";\r\nimport { Changelog } from \"./Changelog/Changelog\";\r\n\r\nconst StyledSettingsWindow = styled.div`\r\n    background-color: var(--bg-color);\r\n    position: relative;\r\n    border: 2px solid var(--default-color);\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 60px 30px 30px 30px;\r\n    box-shadow: 10px 10px 0px var(--accent-color);\r\n`;\r\nconst WindowContent = styled.div`\r\n    width: 100%;\r\n    height: calc(100% - 80px);\r\n    display:flex;\r\n`;\r\n\r\nconst WindowHeader = styled.div`\r\n    ::before{\r\n        content:\"Settings\";\r\n        margin: 5px 20px 0 10px;\r\n    }\r\n    color: var(--bg-color);\r\n    background-color: var(--default-color);\r\n    width:100%;\r\n    height: 32px;\r\n    position:absolute;\r\n    left:0;\r\n    top:0;\r\n    display:flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst WindowFooter = styled.div`\r\n    display:flex;\r\n    justify-content: space-between;\r\n    position:absolute;\r\n    left:30px;\r\n    right:30px;\r\n    bottom:30px;\r\n`;\r\n\r\nexport const StyledSettingsContent = styled.div`\r\n    background-color: var(--bg-color);\r\n    width:400px;\r\n    height:100%;\r\n    margin-right:30px;\r\n    padding-right:20px;\r\n    overflow-y: auto;\r\n`;\r\nexport const SettingsLabel = styled.p`\r\n    font-size: 1rem;\r\n    padding: 10px 0;\r\n`;\r\n\r\nexport const SettingElement = styled.div`\r\n    background-color: var(--bg-color);\r\n    position: relative;\r\n    padding: 10px 0px;\r\n    z-index: 10;\r\n    display:flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst CloseButton = styled(IconButton)`\r\n    z-index:15;\r\n    height:30px;\r\n    opacity: 1;\r\n    padding:0;\r\n`;\r\n\r\nexport const SettingsButton = styled(IconButton)`\r\n    background-color: var(--default-color);\r\n    color: var(--bg-color);\r\n    font-size: 1rem;\r\n    padding: 10px 20px;\r\n    :enabled:hover{\r\n        animation: circling-shadow-small 2s ease 0s infinite normal;\r\n    }\r\n`;\r\n\r\nconst Tabbar = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst TabOption = styled.button<{ active: boolean }>`\r\n    font-size: 1rem;\r\n    font-weight: 500;\r\n    transition: .3s;\r\n    height: 100%;\r\n    min-width: 150px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items:center;\r\n    background-color: transparent;\r\n    outline: none;\r\n    border: none;\r\n    cursor: ${({ active }) => active ? \"default\" : \"pointer\"};\r\n    ${({ active }) => active && \"text-shadow: var(--text-shadow-downwards)\"};\r\n    :hover {\r\n        text-shadow: var(--text-shadow-downwards);\r\n    }\r\n`;\r\n\r\ntype props = {\r\n    hidePopup: () => void;\r\n}\r\n\r\nconst TabOptions = [\r\n    \"Links\",\r\n    \"Appearance\",\r\n    \"Searchbar\",\r\n    \"Changelog\",\r\n]\r\n\r\nexport const SettingsWindow = ({ hidePopup }: props) => {\r\n    const [design, setDesign] = useState(themes[0]);\r\n    const [currentTab, setCurrentTab] = useState(TabOptions[0]);\r\n    const [linkGroups, setLinkGroups] = useState(links);\r\n    const [searchSettings, setSearchSettings] = useState(defaultSearchSettings);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const lsSearchSettings = Settings.Search.get();\r\n            if (lsSearchSettings)\r\n                setSearchSettings(lsSearchSettings);\r\n        } catch { console.error(\"Your currently applied search settings appear to be corrupted.\") }\r\n\r\n        try {\r\n            const lsDesign = Settings.Design.get();\r\n            if (lsDesign)\r\n                setDesign(lsDesign);\r\n        } catch { console.error(\"Your currently applied design appears to be corrupted.\") }\r\n\r\n        try {\r\n            const lsLinkGroups = Settings.Links.get();\r\n            if (lsLinkGroups)\r\n                setLinkGroups(lsLinkGroups);\r\n        } catch { console.error(\"Your currently applied links appear to be corrupted.\") }\r\n    }, []);\r\n\r\n    const applyValues = () => {\r\n        Settings.Design.set(design);\r\n        Settings.Search.set(searchSettings);\r\n        Settings.Links.set(linkGroups);\r\n        window.location.reload(false);\r\n    };\r\n\r\n    return (\r\n        <StyledSettingsWindow>\r\n            <WindowHeader>\r\n                <Tabbar>\r\n                    {TabOptions.map((option) =>\r\n                        <TabOption key={option} active={option === currentTab} onClick={() => setCurrentTab(option)}>{option}</TabOption>\r\n                    )}\r\n                </Tabbar>\r\n                <CloseButton\r\n                    inverted={true}\r\n                    onClick={() => hidePopup()}\r\n                    icon={faTimes}\r\n                />\r\n            </WindowHeader>\r\n\r\n            <WindowContent>\r\n                {currentTab === \"Links\" &&\r\n                    <LinkSettings\r\n                        linkGroups={linkGroups}\r\n                        setLinkGroups={setLinkGroups}\r\n                    />}\r\n\r\n                {currentTab === \"Appearance\" &&\r\n                    <DesignSettings\r\n                        design={design}\r\n                        setDesign={setDesign}\r\n                    />}\r\n\r\n                {currentTab === \"Searchbar\" &&\r\n                    <SearchSettings\r\n                        searchSettings={searchSettings}\r\n                        setSearchSettings={setSearchSettings}\r\n                    />}\r\n\r\n                {currentTab === \"Changelog\" && <Changelog />}\r\n            </WindowContent>\r\n\r\n            {currentTab !== \"Changelog\" &&\r\n                <WindowFooter>\r\n                    <SettingsButton\r\n                        onClick={() => applyValues()}\r\n                        text={\"Apply Changes\"}\r\n                        icon={faSave}\r\n                    />\r\n                    <SettingsButton\r\n                        onClick={() => {\r\n                            window.location.reload(false);\r\n                        }}\r\n                        text={\"Discard Changes\"}\r\n                        icon={faFire}\r\n                    />\r\n                    <SettingsButton\r\n                        onClick={() => {\r\n                            localStorage.clear();\r\n                            window.location.reload(false);\r\n                        }}\r\n                        text={\"Delete All Settings\"}\r\n                        icon={faTrash}\r\n                    />\r\n                </WindowFooter>\r\n            }\r\n        </StyledSettingsWindow >\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport styled from '@emotion/styled';\r\nimport { SettingsWindow } from \"./SettingsWindow/SettingsWindow\";\r\n\r\nconst SettingsPopupToggle = styled.button`\r\n\tposition: fixed;\r\n\ttop: 20px;\r\n\tright:20px;\r\n\tfont-size: 20px;\r\n\r\n\tcolor: var(--default-color);\r\n    background-color:transparent;\r\n    border:none;\r\n\topacity: 0.3;\r\n\r\n\tcursor: pointer;\r\n\ttransition: .3s;\r\n\r\n    :hover{\r\n        opacity: .5;\r\n        color: var(--accent-color2);\r\n        animation:box-flicker 0.01s ease 0s infinite alternate;\r\n    }\r\n    :focus{\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst PopupCover = styled.div`\r\n    position: fixed;\r\n\tleft:0px;\r\n    width:100%;\r\n    height:100%;\r\n    background-color: var(--bg-color);\r\n    opacity: 0.7;\r\n`;\r\n\r\nconst SettingsWrapper = styled.div`\r\n    position: absolute;\r\n\ttop:0px;\r\n    left:0px;\r\n    right:0px;\r\n    bottom:0px;\r\n    padding:100px;\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:center;\r\n    align-items:center;\r\n`;\r\n\r\nexport const Settings = () => {\r\n    const [showSettings, setShowSettings] = useState(false)\r\n\r\n    const hidePopup = () => setShowSettings(false);\r\n\r\n    return (\r\n        <>\r\n            <SettingsPopupToggle onClick={() => setShowSettings(true)}>\r\n                <FontAwesomeIcon icon={faSlidersH} />\r\n            </SettingsPopupToggle>\r\n            {showSettings && (\r\n                <SettingsWrapper>\r\n                    <PopupCover onClick={() => {/*hidePopup()*/ }} />\r\n                    <SettingsWindow hidePopup={hidePopup} />\r\n                </SettingsWrapper>\r\n            )}\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport styled from \"@emotion/styled\";\r\nimport { Design as DesignSettings } from \"./Settings/settingsHandler\";\r\n\r\nimport { LinkContainer } from \"./LinkContainer/LinkContainer\"\r\nimport { Searchbar } from \"./Searchbar/Searchbar\";\r\nimport { Settings } from \"./Settings/Settings\";\r\n\r\nimport { images } from \"../data/data\"\r\n\r\nconst StyledStartpage = styled.div`\r\n    padding:0px 100px;\r\n    display:flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    align-items:center;\r\n    height:calc(100% - 100px);\r\n`;\r\n\r\nconst Image = styled.img`\r\n    height:400px;\r\n    width:400px;\r\n    border: 2px solid var(--default-color);\r\n    padding: 10px;\r\n    object-fit:cover;\r\n\r\n    animation:circling-shadow 4s ease 0s infinite normal;\r\n`;\r\n\r\nexport const Startpage = () => {\r\n    const [img, setImg] = useState(DesignSettings.get()?.image || images[0].value);\r\n\r\n    return (\r\n        <>\r\n            <StyledStartpage>\r\n                <div>\r\n                    <Image src={img} onError={() => setImg(images[0].value)} />\r\n                </div>\r\n                <LinkContainer />\r\n            </StyledStartpage>\r\n            <Searchbar />\r\n            <Settings />\r\n        </>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport './base/variables.css';\r\n\r\nimport { Startpage } from \"./Startpage/Startpage\"\r\nimport * as Settings from \"./Startpage/Settings/settingsHandler\"\r\n\r\nconst App = () => {\r\n\r\n\t//Apply colors\r\n\tvar root = document.documentElement;\r\n\ttry {\r\n\t\tconst colors = Settings.Design.get()?.colors;\r\n\t\tif (colors)\r\n\t\t\tObject.keys(colors).forEach(key => {\r\n\t\t\t\troot.style.setProperty(key, colors[key]);\r\n\t\t\t});\r\n\t} catch { }\r\n\r\n\treturn <Startpage />;\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './base/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/pic_1.03400a86.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic_2.42b93d95.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic_3.8796fde5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic_4.66ccb182.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic_5.6e9543cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic_6.65b20253.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic_7.6516acf6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic_8.ba1342f4.png\";","module.exports = __webpack_public_path__ + \"static/media/google.9ef22081.svg\";","module.exports = __webpack_public_path__ + \"static/media/duckduckgo.e5067b7c.svg\";","module.exports = __webpack_public_path__ + \"static/media/qwant.f90c346a.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.06ef2568.png\";"],"sourceRoot":""}